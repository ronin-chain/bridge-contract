{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "num",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "denom",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "roninChainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "bridgeContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "callbackRegisters",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "voteWeights",
          "type": "uint96[]",
          "internalType": "uint96[]"
        },
        {
          "name": "targetOptions",
          "type": "uint8[]",
          "internalType": "enum GlobalProposal.TargetOption[]"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addBridgeOperators",
      "inputs": [
        {
          "name": "voteWeights",
          "type": "uint96[]",
          "internalType": "uint96[]"
        },
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "addeds",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "checkThreshold",
      "inputs": [
        {
          "name": "_voteWeight",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBridgeOperatorOf",
      "inputs": [
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBridgeOperatorWeight",
      "inputs": [
        {
          "name": "bridgeOperator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "weight",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBridgeOperators",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCallbackRegisters",
      "inputs": [],
      "outputs": [
        {
          "name": "registers",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ],
      "outputs": [
        {
          "name": "contract_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFullBridgeOperatorInfos",
      "inputs": [],
      "outputs": [
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "weights",
          "type": "uint96[]",
          "internalType": "uint96[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGovernorWeight",
      "inputs": [
        {
          "name": "governor",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "weight",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGovernorWeights",
      "inputs": [
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "weights",
          "type": "uint96[]",
          "internalType": "uint96[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGovernors",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getGovernorsOf",
      "inputs": [
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalExpiryDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getThreshold",
      "inputs": [],
      "outputs": [
        {
          "name": "num_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "denom_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalWeight",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "globalProposalRelayed",
      "inputs": [
        {
          "name": "_round",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBridgeOperator",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minimumVoteWeight",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerCallbacks",
      "inputs": [
        {
          "name": "registers",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "registereds",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "relayGlobalProposal",
      "inputs": [
        {
          "name": "globalProposal",
          "type": "tuple",
          "internalType": "struct GlobalProposal.GlobalProposalDetail",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "expiryTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targetOptions",
              "type": "uint8[]",
              "internalType": "enum GlobalProposal.TargetOption[]"
            },
            {
              "name": "values",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "calldatas",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "gasAmounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "supports_",
          "type": "uint8[]",
          "internalType": "enum Ballot.VoteType[]"
        },
        {
          "name": "signatures",
          "type": "tuple[]",
          "internalType": "struct SignatureConsumer.Signature[]",
          "components": [
            {
              "name": "v",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "r",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "s",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "relayProposal",
      "inputs": [
        {
          "name": "proposal",
          "type": "tuple",
          "internalType": "struct Proposal.ProposalDetail",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "chainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "expiryTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targets",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "values",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "calldatas",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "gasAmounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "supports_",
          "type": "uint8[]",
          "internalType": "enum Ballot.VoteType[]"
        },
        {
          "name": "signatures",
          "type": "tuple[]",
          "internalType": "struct SignatureConsumer.Signature[]",
          "components": [
            {
              "name": "v",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "r",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "s",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeBridgeOperators",
      "inputs": [
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "removeds",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolveTargets",
      "inputs": [
        {
          "name": "targetOptions",
          "type": "uint8[]",
          "internalType": "enum GlobalProposal.TargetOption[]"
        }
      ],
      "outputs": [
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "round",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setThreshold",
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sumGovernorsWeight",
      "inputs": [
        {
          "name": "governors",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "sum",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalBridgeOperator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unregisterCallbacks",
      "inputs": [
        {
          "name": "registers",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "unregistereds",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateBridgeOperator",
      "inputs": [
        {
          "name": "newBridgeOperator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateManyTargetOption",
      "inputs": [
        {
          "name": "targetOptions",
          "type": "uint8[]",
          "internalType": "enum GlobalProposal.TargetOption[]"
        },
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "vote",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "status",
          "type": "uint8",
          "internalType": "enum VoteStatusConsumer.VoteStatus"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "againstVoteWeight",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "forVoteWeight",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "expiryTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BridgeOperatorUpdated",
      "inputs": [
        {
          "name": "governor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "fromBridgeOperator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "toBridgeOperator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BridgeOperatorsAdded",
      "inputs": [
        {
          "name": "statuses",
          "type": "bool[]",
          "indexed": false,
          "internalType": "bool[]"
        },
        {
          "name": "voteWeights",
          "type": "uint96[]",
          "indexed": false,
          "internalType": "uint96[]"
        },
        {
          "name": "governors",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BridgeOperatorsRemoved",
      "inputs": [
        {
          "name": "statuses",
          "type": "bool[]",
          "indexed": false,
          "internalType": "bool[]"
        },
        {
          "name": "bridgeOperators",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ContractUpdated",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GlobalProposalCreated",
      "inputs": [
        {
          "name": "round",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "proposal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Proposal.ProposalDetail",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "chainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "expiryTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targets",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "values",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "calldatas",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "gasAmounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "globalProposalHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "globalProposal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct GlobalProposal.GlobalProposalDetail",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "expiryTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targetOptions",
              "type": "uint8[]",
              "internalType": "enum GlobalProposal.TargetOption[]"
            },
            {
              "name": "values",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "calldatas",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "gasAmounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "creator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Notified",
      "inputs": [
        {
          "name": "callData",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "registers",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "statuses",
          "type": "bool[]",
          "indexed": false,
          "internalType": "bool[]"
        },
        {
          "name": "returnDatas",
          "type": "bytes[]",
          "indexed": false,
          "internalType": "bytes[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalApproved",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCreated",
      "inputs": [
        {
          "name": "chainId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "round",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "proposal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Proposal.ProposalDetail",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "chainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "expiryTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targets",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "values",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "calldatas",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "gasAmounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "creator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalExecuted",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "successCalls",
          "type": "bool[]",
          "indexed": false,
          "internalType": "bool[]"
        },
        {
          "name": "returnDatas",
          "type": "bytes[]",
          "indexed": false,
          "internalType": "bytes[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalExpired",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalExpiryDurationChanged",
      "inputs": [
        {
          "name": "duration",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalRejected",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalVoted",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "voter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "support",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum Ballot.VoteType"
        },
        {
          "name": "weight",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TargetOptionUpdated",
      "inputs": [
        {
          "name": "targetOption",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum GlobalProposal.TargetOption"
        },
        {
          "name": "addr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ThresholdUpdated",
      "inputs": [
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "numerator",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "previousNumerator",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "previousDenominator",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ErrBridgeOperatorAlreadyExisted",
      "inputs": [
        {
          "name": "bridgeOperator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrBridgeOperatorUpdateFailed",
      "inputs": [
        {
          "name": "bridgeOperator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrContractTypeNotFound",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrCurrentProposalIsNotCompleted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrDuplicated",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInsufficientGas",
      "inputs": [
        {
          "name": "proposalHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidArguments",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidChainId",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "actual",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "expected",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidExpiryTimestamp",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidOrder",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidProposalNonce",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidThreshold",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInvalidVoteWeight",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrLengthMismatch",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrOnlySelfCall",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrRelayFailed",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUnauthorized",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "expectedRole",
          "type": "uint8",
          "internalType": "enum RoleAccess"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUnsupportedInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUnsupportedVoteType",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrVoteIsFinalized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrZeroAddress",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrZeroCodeContract",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "address": "0x5396b75c9eb8D1153D2B8a0Bb9a8c4B1541f758d",
  "args": "0x0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000007e500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000ba8e32d874948df4cbe72284de91cc4968293bce000000000000000000000000000000000000000000000000000000000000000100000000000000000000000045e8f1acfc89f45720cf11e807ed85b730c67c7e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
  "ast": "",
  "blockNumber": 5632711,
  "bytecode": "0x60a06040526040516200659938038062006599833981016040819052620000269162001523565b8181600160ff1b8c8c8c8c8c8c8c8c836200004181620001a3565b505060016000805160206200657983398151915255620000628888620002b2565b50620000729050600286620003c7565b604080516020808201839052600c60608301526b212924a223a2afa0a226a4a760a11b6080808401919091528284018a905283518084038201815260a0840185528051908301207f599a80fcaa47b95e2323ab4d34d34e0cc9feda4b843edafcc30c7bdf60ea15bf60c08501527f9d3fa1662ea89365eb7af36506f0ad5413bd7e078960d8481ff4718763aaa8e960e08501527fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a56101008501526101208085019190915284518085039091018152610140909301909352815191012090526200015d81838562000471565b50505050505050505062000177816200089160201b60201c565b5062000185600030620008c4565b62000191828262000960565b5050505050505050505050506200196e565b606081620001b18162000a23565b8251806001600160401b03811115620001ce57620001ce62001334565b604051908082528060200260200182016040528015620001f8578160200160208202803683370190505b509250806000036200020b5750620002ac565b6000805160206200653983398151915260006314d72edb60e21b815b84811015620002a6578781815181106200024557620002456200165e565b60200260200101519250620002608362000a5f60201b60201c565b6200026c838362000a97565b62000278848462000c76565b8782815181106200028d576200028d6200165e565b9115156020928302919091019091015260010162000227565b50505050505b50919050565b60008082841115620002ea576040516387f6f09560e01b81526001600160e01b03196000351660048201526024015b60405180910390fd5b60008051602062006559833981519152549150620003267fac1ff16a4f04f2a37a9ba5252a69baa100b460e517d1f8019c054a5ad698f9ff5490565b90506200034160008051602062006559833981519152859055565b6200036b7fac1ff16a4f04f2a37a9ba5252a69baa100b460e517d1f8019c054a5ad698f9ff849055565b8284620003876000805160206200657983398151915262000c96565b60408051868152602081018690527f976f8a9c5bdf8248dec172376d6e2b80a8e3df2f0328e381c6db8e1cf138c0f8910160405180910390a49250929050565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f81111562000400576200040062001674565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f81111562000444576200044462001674565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b60606200047f838362000cbe565b6200048a8162000a23565b82518551811480156200049d5750845181145b620004ca576040516306b5667560e21b81526001600160e01b0319600035166004820152602401620002e1565b806001600160401b03811115620004e557620004e562001334565b6040519080825280602002602001820160405280156200050f578160200160208202803683370190505b5092508060000362000522575062000889565b604080518082019091526000808252602082018190527f546f6b46ab35b030b6816596b352aef78857377176c8b24baa2046a62cf1998c917f8400683eb2cb350596d73644c0c89fe45f108600003457374f4ab3e87b4f3aa3917fd38c234075fde25875da8a6b7e36b58b86681d483271a99eeeee1d78e258a24d917f88547008e60f5748911f2e59feb3093b7e4c2e87b2dd69d61f112fcc932de8e3919081908190815b89811015620007db578d8181518110620005e557620005e56200165e565b602002602001015194508c81815181106200060457620006046200165e565b602002602001015193506200061f8562000ddc60201b60201c565b6200062a8462000ddc565b8e81815181106200063f576200063f6200165e565b60200260200101516001600160601b03166000036200068057604051637f11b8a360e11b81526001600160e01b0319600035166004820152602401620002e1565b6200068c898662000e13565b806200069f57506200069f898562000e13565b80620006b25750620006b2878662000e13565b80620006c55750620006c5878562000e13565b158c8281518110620006db57620006db6200165e565b6020026020010190151590811515815250508b81815181106200070257620007026200165e565b602002602001015115620007d2576200071c898662000c76565b5062000729878562000c76565b506001600160a01b03848116600081815260208b90526040902080546001600160a01b0319169288169290921790915582528e518f90829081106200077257620007726200165e565b6020908102919091018101516001600160601b03169083018190526200079990846200168a565b6001600160a01b038087166000908152602089815260409091208551918601516001600160601b0316600160a01b029190921617905592505b600101620005c7565b50620008087f6924fe71b0c8b61aea02ca498b5f53b29bd95726278b1fe4eb791bb24a42644c8362000e36565b5062000840635ebae8a060e01b8d8d6040516020016200082a92919062001728565b60408051601f1981840301815291905262000e50565b7f897810999654e525e272b5909785c4d0ceaee1bbf9c87d9091a37558b0423b788b8f8f8f6040516200087794939291906200175a565b60405180910390a15050505050505050505b509392505050565b600281905560405181907fe5cd1c123a8cf63fa1b7229678db61fe8ae99dbbd27889370b6667c8cae97da190600090a250565b8060036000846004811115620008de57620008de62001674565b6004811115620008f257620008f262001674565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600481111562000933576200093362001674565b6040517f356c8c57e9e84b99b1cb58b13c985b2c979f78cbdf4d0fa70fe2a98bb09a099d90600090a35050565b60005b825181101562000a1e57306001600160a01b03168282815181106200098c576200098c6200165e565b60200260200101516001600160a01b031603620009cb5760405163053265f160e01b81526001600160e01b0319600035166004820152602401620002e1565b62000a15838281518110620009e457620009e46200165e565b602002602001015183838151811062000a015762000a016200165e565b6020026020010151620008c460201b60201c565b60010162000963565b505050565b62000a2e816200118b565b1562000a5c57604051630d697db160e11b81526001600160e01b0319600035166004820152602401620002e1565b50565b806001600160a01b03163b60000362000a5c57604051630bfc64a360e21b81526001600160a01b0382166004820152602401620002e1565b6040516001600160e01b03198216602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166301ffc9a760e01b1790525190915060009081906001600160a01b0386169062000afb90859062001810565b600060405180830381855afa9150503d806000811462000b38576040519150601f19603f3d011682016040523d82523d6000602084013e62000b3d565b606091505b50915091508162000c1f57846001600160a01b03168360405160240162000b6591906200185c565b60408051601f198184030181529181526020820180516001600160e01b03166325da93a560e11b1790525162000b9c919062001810565b600060405180830381855afa9150503d806000811462000bd9576040519150601f19603f3d011682016040523d82523d6000602084013e62000bde565b606091505b5090925090508162000c1f5760405163069d427960e11b81526001600160e01b0319851660048201526001600160a01b0386166024820152604401620002e1565b8080602001905181019062000c35919062001871565b62000c6f5760405163069d427960e11b81526001600160e01b0319851660048201526001600160a01b0386166024820152604401620002e1565b5050505050565b600062000c8d836001600160a01b03841662001236565b90505b92915050565b600062000ca1825490565b905062000cb98262000cb58360016200168a565b9055565b919050565b81518151606091908082016001600160401b0381111562000ce35762000ce362001334565b60405190808252806020026020018201604052801562000d0d578160200160208202803683370190505b50925060005b8281101562000d6f5785818151811062000d315762000d316200165e565b602002602001015184828151811062000d4e5762000d4e6200165e565b6001600160a01b039092166020928302919091019091015260010162000d13565b60005b8281101562000dd25785818151811062000d905762000d906200165e565b602002602001015185838151811062000dad5762000dad6200165e565b6001600160a01b03909216602092830291909101909101526001918201910162000d72565b5050505092915050565b6001600160a01b03811662000a5c5760405163104c66df60e31b81526001600160e01b0319600035166004820152602401620002e1565b6001600160a01b0381166000908152600183016020526040812054151562000c8d565b600062000c908362000e49818562001288565b9250829055565b600062000e6c60008051602062006539833981519152620012a8565b8051909150600081900362000e815750505050565b6000816001600160401b0381111562000e9e5762000e9e62001334565b60405190808252806020026020018201604052801562000ec8578160200160208202803683370190505b5090506000826001600160401b0381111562000ee85762000ee862001334565b60405190808252806020026020018201604052801562000f1d57816020015b606081526020019060019003908162000f075790505b5090506000868660405160200162000f3792919062001895565b604051602081830303815290604052905060008160405160240162000f5d91906200185c565b60408051601f198184030181529190526020810180516001600160e01b03166325da93a560e11b179052905060005b85811015620011415786818151811062000faa5762000faa6200165e565b60200260200101516001600160a01b03168360405162000fcb919062001810565b6000604051808303816000865af19150503d80600081146200100a576040519150601f19603f3d011682016040523d82523d6000602084013e6200100f565b606091505b508683815181106200102557620010256200165e565b602002602001018684815181106200104157620010416200165e565b60200260200101829052821515151581525050508481815181106200106a576200106a6200165e565b602002602001015162001138578681815181106200108c576200108c6200165e565b60200260200101516001600160a01b031682604051620010ad919062001810565b6000604051808303816000865af19150503d8060008114620010ec576040519150601f19603f3d011682016040523d82523d6000602084013e620010f1565b606091505b508683815181106200110757620011076200165e565b602002602001018684815181106200112357620011236200165e565b60200260200101829052821515151581525050505b60010162000f8c565b507fc0b07a27e66788f39cc91405f012f34066b16f31b4bda9438c52f2dae0cc5b6382878686604051620011799493929190620018c8565b60405180910390a15050505050505050565b600081516000036200119f57506000919050565b60005b60018351038110156200122d57600181015b83518110156200122357838181518110620011d357620011d36200165e565b60200260200101516001600160a01b0316848381518110620011f957620011f96200165e565b60200260200101516001600160a01b0316036200121a575060019392505050565b600101620011b4565b50600101620011a2565b50600092915050565b60008181526001830160205260408120546200127f5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000c90565b50600062000c90565b815481018181101562000c9057634e487b7160005260116020526024601cfd5b60606000620012b783620012be565b9392505050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156200131057602002820191906000526020600020905b815481526020019060010190808311620012fb575b50505050509050919050565b80516001600160a01b038116811462000cb957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562001375576200137562001334565b604052919050565b60006001600160401b0382111562001399576200139962001334565b5060051b60200190565b600082601f830112620013b557600080fd5b81516020620013ce620013c8836200137d565b6200134a565b8083825260208201915060208460051b870101935086841115620013f157600080fd5b602086015b8481101562001418576200140a816200131c565b8352918301918301620013f6565b509695505050505050565b600082601f8301126200143557600080fd5b8151602062001448620013c8836200137d565b8083825260208201915060208460051b8701019350868411156200146b57600080fd5b602086015b84811015620014185780516001600160601b0381168114620014925760008081fd5b835291830191830162001470565b600082601f830112620014b257600080fd5b81516020620014c5620013c8836200137d565b80838252602082019150600560208560051b880101945087851115620014ea57600080fd5b602087015b8581101562001516578051828110620015085760008081fd5b8452928401928401620014ef565b5090979650505050505050565b6000806000806000806000806000806101408b8d0312156200154457600080fd5b8a51995060208b0151985060408b015197506200156460608c016200131c565b60808c01519097506001600160401b03808211156200158257600080fd5b620015908e838f01620013a3565b975060a08d0151915080821115620015a757600080fd5b620015b58e838f01620013a3565b965060c08d0151915080821115620015cc57600080fd5b620015da8e838f01620013a3565b955060e08d0151915080821115620015f157600080fd5b620015ff8e838f0162001423565b94506101008d01519150808211156200161757600080fd5b620016258e838f01620014a0565b93506101208d01519150808211156200163d57600080fd5b506200164c8d828e01620013a3565b9150509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b8082018082111562000c9057634e487b7160e01b600052601160045260246000fd5b60008151808452602080850194506020840160005b83811015620016e85781516001600160a01b031687529582019590820190600101620016c1565b509495945050505050565b60008151808452602080850194506020840160005b83811015620016e857815115158752958201959082019060010162001708565b6040815260006200173d6040830185620016ac565b8281036020840152620017518185620016f3565b95945050505050565b6080815260006200176f6080830187620016f3565b82810360208481019190915286518083528782019282019060005b81811015620017b15784516001600160601b0316835293830193918301916001016200178a565b50508481036040860152620017c78188620016ac565b925050508281036060840152620017df8185620016ac565b979650505050505050565b60005b8381101562001807578181015183820152602001620017ed565b50506000910152565b6000825162001824818460208701620017ea565b9190910192915050565b6000815180845262001848816020860160208601620017ea565b601f01601f19169290920160200192915050565b60208152600062000c8d60208301846200182e565b6000602082840312156200188457600080fd5b81518015158114620012b757600080fd5b6001600160e01b0319831681528151600090620018ba816004850160208701620017ea565b919091016004019392505050565b608081526000620018dd60808301876200182e565b602083820381850152620018f28288620016ac565b91508382036040850152620019088287620016f3565b915083820360608501528185518084528284019150828160051b85010183880160005b838110156200195d57601f198784030185526200194a8383516200182e565b948601949250908501906001016200192b565b50909b9a5050505050505050505050565b608051614ba162001998600039600081816102c5015281816107c501526108510152614ba16000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80639b19dbfd1161011a578063cc7e6b3b116100ad578063de981f1b1161007c578063de981f1b1461050c578063e75235b814610537578063e9c034981461053f578063f80b535214610552578063fdc4fa471461055a57600080fd5b8063cc7e6b3b146104be578063d0a50db0146104de578063d78392f8146104e6578063dafae408146104f957600080fd5b8063b9c36209116100e9578063b9c3620914610464578063bc9182fd1461048c578063bc96180b1461049f578063c441c4a8146104a757600080fd5b80639b19dbfd146103db5780639b2ee437146103e3578063b384abef146103f6578063b405aaf21461045157600080fd5b80633644e515116101925780637de5dedd116101615780637de5dedd14610332578063800eaab31461033a578063865e6fd31461034d578063901979d51461036057600080fd5b80633644e515146102c05780635e05cf9e146102e7578063776fb1ec146102fc5780637d465f791461031f57600080fd5b80631f425338116101ce5780631f425338146102675780632d6d7d731461027a57806334d5f37b1461028d57806335da8121146102ad57600080fd5b806301a5f43f1461020057806306aba0e1146102295780630a44fa431461023f5780630f7c318914610252575b600080fd5b61021361020e366004613b79565b61056d565b6040516102209190613c50565b60405180910390f35b610231610620565b604051908152602001610220565b61023161024d366004613c63565b61063d565b61025a6106c2565b6040516102209190613cde565b610213610275366004613c63565b6106db565b61025a610288366004613c63565b610728565b61023161029b366004613cf1565b60006020819052908152604090205481565b6102136102bb366004613c63565b61076c565b6102317f000000000000000000000000000000000000000000000000000000000000000081565b6102fa6102f5366004613d4e565b6107b2565b005b61030f61030a366004613cf1565b6107f1565b6040519015158152602001610220565b6102fa61032d366004613dea565b61083e565b610231610876565b6102fa610348366004613fe8565b6108f2565b6102fa61035b36600461405a565b610937565b6103c361036e36600461408d565b6001600160a01b039081166000908152600080516020614b0c83398151915260209081526040808320549093168252600080516020614aec83398151915290522054600160a01b90046001600160601b031690565b6040516001600160601b039091168152602001610220565b61025a610952565b6102fa6103f136600461408d565b61095c565b6104406104043660046140a8565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460069093015460ff909416939192909185565b6040516102209594939291906140f0565b61030f61045f36600461408d565b610af3565b6104776104723660046140a8565b610b0d565b60408051928352602083019190915201610220565b61025a61049a36600461411e565b610b2e565b610231610c1f565b6104af610c2a565b6040516102209392919061418c565b6104d16104cc366004613c63565b610c54565b60405161022091906141cf565b610231610c92565b6103c36104f436600461408d565b610cab565b61030f610507366004613cf1565b610cb6565b61051f61051a3660046141e2565b610cf3565b6040516001600160a01b039091168152602001610220565b610477610d6e565b61021361054d366004613c63565b610d9f565b61025a610de5565b61025a610568366004613c63565b610def565b6060610577610ed6565b61061587878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250610f0692505050565b979650505050505050565b6000610638600080516020614b4c8339815191525490565b905090565b600082828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061067e92508391506112829050565b6106ba8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506112ba92505050565b949350505050565b6060610638600080516020614a8c83398151915261133e565b60606106e5610ed6565b61072183838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061134b92505050565b9392505050565b606061072183838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250611416915050565b92915050565b6060610776610ed6565b61072183838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061157092505050565b6107bb33611662565b6107ea85858585857f0000000000000000000000000000000000000000000000000000000000000000336116a4565b5050505050565b60008060008381527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff166004811115610836576108366140ca565b141592915050565b61084733611662565b6107ea85858585857f000000000000000000000000000000000000000000000000000000000000000033611749565b600061088e600080516020614aac8339815191525490565b60016108a6600080516020614aac8339815191525490565b6108d46108bf600080516020614b4c8339815191525490565b600080516020614acc833981519152906117a5565b6108de9190614213565b6108e89190614226565b6106389190614239565b333014610929576000356001600160e01b0319166040516307337e1960e41b8152600401610920919061425b565b60405180910390fd5b61093382826117d0565b5050565b61093f610ed6565b6109488161187e565b61093382826118b4565b6060610638611958565b61096533611662565b61096e81611971565b336000908152600080516020614aec83398151915260208190526040909120546001600160a01b0390811690831681036109c657604051630669b93360e31b81526001600160a01b0384166004820152602401610920565b600080516020614b2c83398151915260006109e182846119a6565b80156109f257506109f282866119bb565b905080610a1d5760405163080fab4b60e31b81526001600160a01b0386166004820152602401610920565b6001600160a01b038381166000818152600080516020614b0c8339815191526020818152604080842080546001600160a01b0319908116909155958b16808552818520805488163390811790915585528a8352938190208054909616841790955584519081019390935292820152610ab0906364b18d0960e11b906060015b6040516020818303038152906040526119d0565b6040516001600160a01b03808816919086169033907fcef34cd748f30a1b7a2f214fd1651779f79bc6c1be02785cad5c1f0ee877213d90600090a4505050505050565b6000610766600080516020614b2c83398151915283611cd8565b600080610b18610ed6565b610b228484611cfa565b915091505b9250929050565b8051606090806001600160401b03811115610b4b57610b4b613e2d565b604051908082528060200260200182016040528015610b74578160200160208202803683370190505b509150600080516020614aec83398151915260005b82811015610c1757816000868381518110610ba657610ba6614270565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160a01b0316848281518110610bf757610bf7614270565b6001600160a01b0390921660209283029190910190910152600101610b89565b505050919050565b600061063860025490565b6060806060610c37611def565b9250610c4283610b2e565b9150610c4d83611e1a565b9050909192565b6060610721838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611e1a92505050565b6000610638600080516020614b2c833981519152611f03565b600061076682611f0d565b6000610cd16108bf600080516020614b4c8339815191525490565b600080516020614aac83398151915254610ceb9084614286565b101592915050565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610d2a57610d2a6140ca565b60ff1681526020810191909152604001600020546001600160a01b0316905080610d69578160405163409140df60e11b8152600401610920919061429d565b919050565b600080610d87600080516020614acc8339815191525490565b600080516020614aac83398151915254915091509091565b6060610da9610ed6565b610721838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611f4592505050565b6060610638611def565b606081806001600160401b03811115610e0a57610e0a613e2d565b604051908082528060200260200182016040528015610e33578160200160208202803683370190505b509150600080516020614b0c83398151915260005b82811015610ecd57816000878784818110610e6557610e65614270565b9050602002016020810190610e7a919061408d565b6001600160a01b0390811682526020820192909252604001600020548551911690859083908110610ead57610ead614270565b6001600160a01b0390921660209283029190910190910152600101610e48565b50505092915050565b333014610f04576000356001600160e01b0319166040516307337e1960e41b8152600401610920919061425b565b565b6060610f12838361222a565b610f1b81611282565b8251855181148015610f2d5750845181145b610f58576000356001600160e01b0319166040516306b5667560e21b8152600401610920919061425b565b806001600160401b03811115610f7057610f70613e2d565b604051908082528060200260200182016040528015610f99578160200160208202803683370190505b50925080600003610faa575061127a565b604080518082019091526000808252602082018190527f546f6b46ab35b030b6816596b352aef78857377176c8b24baa2046a62cf1998c91600080516020614b0c83398151915291600080516020614b2c83398151915291600080516020614aec833981519152919081908190815b898110156111fb578d818151811061103357611033614270565b602002602001015194508c818151811061104f5761104f614270565b6020026020010151935061106285611971565b61106b84611971565b8e818151811061107d5761107d614270565b60200260200101516001600160601b03166000036110bc576000356001600160e01b031916604051637f11b8a360e11b8152600401610920919061425b565b6110c68986611cd8565b806110d657506110d68985611cd8565b806110e657506110e68786611cd8565b806110f657506110f68785611cd8565b158c828151811061110957611109614270565b6020026020010190151590811515815250508b818151811061112d5761112d614270565b6020026020010151156111f35761114489866119bb565b5061114f87856119bb565b506001600160a01b03848116600081815260208b90526040902080546001600160a01b0319169288169290921790915582528e518f908290811061119557611195614270565b6020908102919091018101516001600160601b03169083018190526111ba9084614213565b6001600160a01b038087166000908152602089815260409091208551918601516001600160601b0316600160a01b029190921617905592505b600101611019565b50611214600080516020614b4c83398151915283612334565b50611233635ebae8a060e01b8d8d604051602001610a9c9291906142b7565b7f897810999654e525e272b5909785c4d0ceaee1bbf9c87d9091a37558b0423b788b8f8f8f60405161126894939291906142e5565b60405180910390a15050505050505050505b509392505050565b61128b8161234b565b156112b7576000356001600160e01b031916604051630d697db160e11b8152600401610920919061425b565b50565b6000816112c681611282565b600080516020614aec83398151915260005b8451811015610c17578160008683815181106112f6576112f6614270565b6020908102919091018101516001600160a01b031682528101919091526040016000205461133490600160a01b90046001600160601b031685614213565b93506001016112d8565b60606000610721836123ea565b60608161135781611282565b8251806001600160401b0381111561137157611371613e2d565b60405190808252806020026020018201604052801561139a578160200160208202803683370190505b509250600080516020614a8c83398151915260005b8281101561140d576113e38682815181106113cc576113cc614270565b6020026020010151836119a690919063ffffffff16565b8582815181106113f5576113f5614270565b911515602092830291909101909101526001016113af565b50505050919050565b606082516001600160401b0381111561143157611431613e2d565b60405190808252806020026020018201604052801561145a578160200160208202803683370190505b50905060005b8351811015611569576003600085838151811061147f5761147f614270565b60200260200101516004811115611498576114986140ca565b60048111156114a9576114a96140ca565b815260200190815260200160002060009054906101000a90046001600160a01b03168282815181106114dd576114dd614270565b60200260200101906001600160a01b031690816001600160a01b031681525050828015611535575060006001600160a01b031682828151811061152257611522614270565b60200260200101516001600160a01b0316145b15611561576000356001600160e01b03191660405163053265f160e01b8152600401610920919061425b565b600101611460565b5092915050565b60608161157c81611282565b8251806001600160401b0381111561159657611596613e2d565b6040519080825280602002602001820160405280156115bf578160200160208202803683370190505b509250806000036115d0575061165c565b600080516020614a8c83398151915260006314d72edb60e21b815b848110156116565787818151811061160557611605614270565b602002602001015192506116188361187e565b6116228383612446565b61162c84846119bb565b87828151811061163e5761163e614270565b911515602092830291909101909101526001016115eb565b50505050505b50919050565b61166b81611f0d565b6001600160601b03166000036112b7576000356001600160e01b0319166003604051620f948f60ea1b8152600401610920929190614332565b6116b66116b0886144a3565b826125d9565b5060006116ca6116c5896144a3565b6126df565b905061173f6116d8896144a3565b8888888861172b896116eb89600061281e565b60405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b61173a8a6116eb8a600161281e565b612857565b5050505050505050565b600061175d61175789614577565b83612c4e565b9050600061177261176d8a614577565b612d98565b905061179a828989898961178b8a6116eb89600061281e565b61173a8b6116eb8a600161281e565b505050505050505050565b600082548015611569578281029150808204831461156957634e487b7160005260116020526024601cfd5b60005b825181101561187957306001600160a01b03168282815181106117f8576117f8614270565b60200260200101516001600160a01b031603611835576000356001600160e01b03191660405163053265f160e01b8152600401610920919061425b565b61187183828151811061184a5761184a614270565b602002602001015183838151811061186457611864614270565b6020026020010151612ecf565b6001016117d3565b505050565b806001600160a01b03163b6000036112b757604051630bfc64a360e21b81526001600160a01b0382166004820152602401610920565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f8111156118ea576118ea6140ca565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f81111561192b5761192b6140ca565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b6060610638600080516020614b2c83398151915261133e565b6001600160a01b0381166112b7576000356001600160e01b03191660405163104c66df60e31b8152600401610920919061425b565b6000610721836001600160a01b038416612f62565b6000610721836001600160a01b038416613055565b60006119e9600080516020614a8c83398151915261133e565b805190915060008190036119fd5750505050565b6000816001600160401b03811115611a1757611a17613e2d565b604051908082528060200260200182016040528015611a40578160200160208202803683370190505b5090506000826001600160401b03811115611a5d57611a5d613e2d565b604051908082528060200260200182016040528015611a9057816020015b6060815260200190600190039081611a7b5790505b50905060008686604051602001611aa8929190614665565b6040516020818303038152906040529050600081604051602401611acc91906146c2565b60408051601f198184030181529190526020810180516001600160e01b03166325da93a560e11b179052905060005b85811015611c9057868181518110611b1557611b15614270565b60200260200101516001600160a01b031683604051611b3491906146d5565b6000604051808303816000865af19150503d8060008114611b71576040519150601f19603f3d011682016040523d82523d6000602084013e611b76565b606091505b50868381518110611b8957611b89614270565b60200260200101868481518110611ba257611ba2614270565b6020026020010182905282151515158152505050848181518110611bc857611bc8614270565b6020026020010151611c8857868181518110611be657611be6614270565b60200260200101516001600160a01b031682604051611c0591906146d5565b6000604051808303816000865af19150503d8060008114611c42576040519150601f19603f3d011682016040523d82523d6000602084013e611c47565b606091505b50868381518110611c5a57611c5a614270565b60200260200101868481518110611c7357611c73614270565b60200260200101829052821515151581525050505b600101611afb565b507fc0b07a27e66788f39cc91405f012f34066b16f31b4bda9438c52f2dae0cc5b6382878686604051611cc6949392919061473e565b60405180910390a15050505050505050565b6001600160a01b03811660009081526001830160205260408120541515610721565b60008082841115611d2c576000356001600160e01b0319166040516387f6f09560e01b8152600401610920919061425b565b600080516020614acc833981519152549150611d54600080516020614aac8339815191525490565b9050611d6d600080516020614acc833981519152859055565b611d84600080516020614aac833981519152849055565b8284611daf7f92872d32822c9d44b36a2537d3e0d4c46fc4de1ce154ccfaed560a8a58445f1d6130a8565b60408051868152602081018690527f976f8a9c5bdf8248dec172376d6e2b80a8e3df2f0328e381c6db8e1cf138c0f8910160405180910390a49250929050565b60606106387f546f6b46ab35b030b6816596b352aef78857377176c8b24baa2046a62cf1998c61133e565b8051606090806001600160401b03811115611e3757611e37613e2d565b604051908082528060200260200182016040528015611e60578160200160208202803683370190505b509150600080516020614aec83398151915260005b82811015610c1757816000868381518110611e9257611e92614270565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000160149054906101000a90046001600160601b0316848281518110611ee357611ee3614270565b6001600160601b0390921660209283029190910190910152600101611e75565b6000610766825490565b6001600160a01b03166000908152600080516020614aec8339815191526020526040902054600160a01b90046001600160601b031690565b606081611f5181611282565b8251806001600160401b03811115611f6b57611f6b613e2d565b604051908082528060200260200182016040528015611f94578160200160208202803683370190505b50925080600003611fa5575061165c565b60408051808201909152600080825260208201819052600080516020614b0c833981519152917f546f6b46ab35b030b6816596b352aef78857377176c8b24baa2046a62cf1998c91600080516020614b2c83398151915291600080516020614aec833981519152919081908190815b898110156121aa578c818151811061202e5761202e614270565b6020908102919091018101516001600160a01b038082166000908152928c90526040909220549091169550935061206485611971565b61206d84611971565b6001600160a01b0385811660009081526020888152604091829020825180840190935254808416808452600160a01b9091046001600160601b031691830191909152909350908516146120e1576000356001600160e01b03191660405163053265f160e01b8152600401610920919061425b565b6120eb8785611cd8565b80156120fc57506120fc8886611cd8565b8c828151811061210e5761210e614270565b6020026020010190151590811515815250508b818151811061213257612132614270565b6020026020010151156121a25761214988866119a6565b5061215487856119a6565b506001600160a01b03808516600090815260208b8152604080832080546001600160a01b031916905592881682528881529181205582015161219f906001600160601b031684614213565b92505b600101612014565b506121c3600080516020614b4c833981519152836130c3565b506121e263c48549de60e01b8d8d604051602001610a9c9291906142b7565b7fdf3dcd7987202f64648f3acdbf12401e3a2bb23e77e19f99826b5475cbb863698b8d60405161221392919061478b565b60405180910390a150505050505050505050919050565b81518151606091908082016001600160401b0381111561224c5761224c613e2d565b604051908082528060200260200182016040528015612275578160200160208202803683370190505b50925060005b828110156122cf5785818151811061229557612295614270565b60200260200101518482815181106122af576122af614270565b6001600160a01b039092166020928302919091019091015260010161227b565b60005b8281101561232a578581815181106122ec576122ec614270565b602002602001015185838151811061230657612306614270565b6001600160a01b0390921660209283029190910190910152600191820191016122d2565b5050505092915050565b60006107668361234485856130d3565b9250829055565b6000815160000361235e57506000919050565b60005b60018351038110156123e157600181015b83518110156123d85783818151811061238d5761238d614270565b60200260200101516001600160a01b03168483815181106123b0576123b0614270565b60200260200101516001600160a01b0316036123d0575060019392505050565b600101612372565b50600101612361565b50600092915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561243a57602002820191906000526020600020905b815481526020019060010190808311612426575b50505050509050919050565b600081604051602401612459919061425b565b60408051601f198184030181529181526020820180516001600160e01b03166301ffc9a760e01b1790525190915060009081906001600160a01b038616906124a29085906146d5565b600060405180830381855afa9150503d80600081146124dd576040519150601f19603f3d011682016040523d82523d6000602084013e6124e2565b606091505b5091509150816125a457846001600160a01b03168360405160240161250791906146c2565b60408051601f198184030181529181526020820180516001600160e01b03166325da93a560e11b1790525161253c91906146d5565b600060405180830381855afa9150503d8060008114612577576040519150601f19603f3d011682016040523d82523d6000602084013e61257c565b606091505b509092509050816125a457838560405163069d427960e11b81526004016109209291906147b0565b808060200190518101906125b891906147d3565b6107ea57838560405163069d427960e11b81526004016109209291906147b0565b602082015160009080820361261b5760405163092048d160e11b8152600080356001600160e01b03191660048301526024820152466044820152606401610920565b6002546126299085906130f2565b6000612634856126df565b905061263f82613193565b6000838152600160208181526040808420858552909152918290209188015190820184905560069091015592508451831461269b576000356001600160e01b03191660405163d4cec26960e01b8152600401610920919061425b565b8083837fa57d40f1496988cf60ab7c9d5ba4ff83647f67d3898d441a3aaf21b651678fd988886040516126cf9291906148e2565b60405180910390a4505092915050565b6080810151606082015160a083015151600092919083906001600160401b0381111561270d5761270d613e2d565b604051908082528060200260200182016040528015612736578160200160208202803683370190505b5060c086015190915060005b8251811015612795578660a00151818151811061276157612761614270565b60200260200101518051906020012083828151811061278257612782614270565b6020908102919091010152600101612742565b50604080517fd051578048e6ff0bbc9fca3b65a42088dbde10f36ca841de566711087ad9b08a8152875160208083019190915280890151828401529790910151606082015283518702938701939093206080840152835186029386019390932060a0830152805185029085012060c082015281518402919093012060e083015250610100902090565b604080517fd900570327c4c0df8dd6bdd522b7da7e39145dd049d2fd4602276adcd511e3c2815260208101939093528201526060902090565b841580159061286557508483145b612890576000356001600160e01b0319166040516306b5667560e21b8152600401610920919061425b565b60008080856001600160401b038111156128ac576128ac613e2d565b6040519080825280602002602001820160405280156128d5578160200160208202803683370190505b5090506000866001600160401b038111156128f2576128f2613e2d565b60405190808252806020026020018201604052801561291b578160200160208202803683370190505b50905060008060003660005b8b811015612aac578c8c8281811061294157612941614270565b90506060020191508e8e8281811061295b5761295b614270565b9050602002016020810190612970919061490c565b92506000836001811115612986576129866140ca565b036129f0576129ab8b61299c602085018561492d565b8460200135856040013561322f565b945084878a6129b981614950565b9b50815181106129cb576129cb614270565b60200260200101906001600160a01b031690816001600160a01b031681525050612a61565b6001836001811115612a0457612a046140ca565b03612a3a57612a1a8a61299c602085018561492d565b9450848689612a2881614950565b9a50815181106129cb576129cb614270565b6000356001600160e01b031916604051630612418f60e11b8152600401610920919061425b565b846001600160a01b0316846001600160a01b031610612aa1576000356001600160e01b031916604051635d3dcd3160e01b8152600401610920919061425b565b849350600101612927565b50505085845250508281526020808c015160009081526001825260408082208e51835290925290812090612ade613257565b90506000612aeb85613261565b9050818110612b725780600003612b23576000356001600160e01b031916604051637f11b8a360e11b8152600401610920919061425b565b825460ff1916600190811784558301546040517f5c819725ea53655a3b898f3df59b66489761935454e9212ca1e5ebd759953d0b90600090a2612b66838f61326c565b50505050505050612c45565b600082612b7d6132d9565b612b879190614226565b612b92906001614213565b90506000612b9f86613261565b9050818110612c1e5780600003612bd7576000356001600160e01b031916604051637f11b8a360e11b8152600401610920919061425b565b845460ff1916600317855560018501546040517f55295d4ce992922fa2e5ffbf3a3dcdb367de0a15e125ace083456017fd22060f90600090a2505050505050505050612c45565b6000356001600160e01b031916604051634ccfe64360e11b8152600401610920919061425b565b50505050505050565b612c8e6040518060e00160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b612ca7612ca084604001516001611416565b84906132e3565b9050612cbe600254826130f290919063ffffffff16565b6000612cc9826126df565b90506000612cd76000613193565b60008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602090815260409091209087015160018201859055600690910155905082518114612d49576000356001600160e01b03191660405163d4cec26960e01b8152600401610920919061425b565b81817f771d78ae9e5fca95a532fb0971d575d0ce9b59d14823c063e08740137e0e0eca85612d7689612d98565b8989604051612d889493929190614969565b60405180910390a3505092915050565b60608101516040820151608083015151600092919083906001600160401b03811115612dc657612dc6613e2d565b604051908082528060200260200182016040528015612def578160200160208202803683370190505b5060a086015190915060005b8251811015612e4e5786608001518181518110612e1a57612e1a614270565b602002602001015180519060200120838281518110612e3b57612e3b614270565b6020908102919091010152600101612dfb565b50604080517f1463f426c05aff2c1a7a0957a71c9898bc8b47142540538e79ee25ee911413508152875160208083019190915297880151918101919091528351870293870193909320606084015283518602938601939093206080830152805185029085012060a082015281518402919093012060c08301525060e0902090565b8060036000846004811115612ee657612ee66140ca565b6004811115612ef757612ef76140ca565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b039283161790558116826004811115612f3557612f356140ca565b6040517f356c8c57e9e84b99b1cb58b13c985b2c979f78cbdf4d0fa70fe2a98bb09a099d90600090a35050565b6000818152600183016020526040812054801561304b576000612f86600183614226565b8554909150600090612f9a90600190614226565b9050818114612fff576000866000018281548110612fba57612fba614270565b9060005260206000200154905080876000018481548110612fdd57612fdd614270565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061301057613010614a50565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610766565b6000915050610766565b600081815260018301602052604081205461309c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610766565b506000610766565b9055565b60006130b2825490565b9050610d69826130a4836001614213565b600061076683612344858561340d565b815481018181101561076657634e487b7160005260116020526024601cfd5b60008260600151511180156131105750816080015151826060015151145b801561312557508160a0015151826060015151145b801561313a57508160c0015151826060015151145b613165576000356001600160e01b0319166040516306b5667560e21b8152600401610920919061425b565b61316f8142614213565b826040015111156109335760405163ad89be9d60e01b815260040160405180910390fd5b600081815260208190526040812054908190036131c25750600090815260208190526040902060019081905590565b60008281526001602090815260408083208484529091528120906000825460ff1660048111156131f4576131f46140ca565b036132125760405163757a436360e01b815260040160405180910390fd5b505050600090815260208190526040902080546001019081905590565b6000806000613240878787876135e8565b9150915061324d816136d5565b5095945050505050565b6000610638610876565b6000610766826112ba565b6132758161388b565b1561093357815460ff19166002178255600080613291836138a5565b9150915083600101547fe134987599ae266ec90edeff1b26125b287dbb57b10822649432d1bb26537fba83836040516132cb929190614a66565b60405180910390a250505050565b6000610638610620565b6133236040518060e00160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b82518152602080840151604080840191909152600091830191909152830151516001600160401b0381111561335a5761335a613e2d565b604051908082528060200260200182016040528015613383578160200160208202803683370190505b5060608083019190915283015160808083019190915283015160a08083019190915283015160c082015260005b836040015151811015611569578281815181106133cf576133cf614270565b6020026020010151826060015182815181106133ed576133ed614270565b6001600160a01b03909216602092830291909101909101526001016133b0565b600082548281101561342c57634e487b7160005260116020526024601cfd5b9190910392915050565b60048301548110156134e95782600801600084600401838154811061345d5761345d614270565b60009182526020808320909101546001600160a01b031683528201929092526040018120805460ff1916905560048401805460078601929190849081106134a6576134a6614270565b60009182526020808320909101546001600160a01b031683528201929092526040018120805460ff19168155600181810183905560029091019190915501613436565b5060005b60058301548110156135a05782600801600084600501838154811061351457613514614270565b60009182526020808320909101546001600160a01b031683528201929092526040018120805460ff19169055600584018054600786019291908490811061355d5761355d614270565b60009182526020808320909101546001600160a01b031683528201929092526040018120805460ff191681556001818101839055600290910191909155016134ed565b50815460ff1916825560006001830181905560028301819055600383018190556135ce906004840190613b03565b6135dc600583016000613b03565b60006006830155919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561361f57506000905060036136cc565b8460ff16601b1415801561363757508460ff16601c14155b1561364857506000905060046136cc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561369c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166136c5576000600192509250506136cc565b9150600090505b94509492505050565b60008160048111156136e9576136e96140ca565b036136f15750565b6001816004811115613705576137056140ca565b036137525760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610920565b6002816004811115613766576137666140ca565b036137b35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610920565b60038160048111156137c7576137c76140ca565b0361381f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610920565b6004816004811115613833576138336140ca565b036112b75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610920565b600081602001516000148061076657505060200151461490565b6060806138b18361388b565b6138ef57602083015160405163092048d160e11b81526000356001600160e01b03191660048201526024810191909152466044820152606401610920565b8260600151516001600160401b0381111561390c5761390c613e2d565b604051908082528060200260200182016040528015613935578160200160208202803683370190505b5091508260600151516001600160401b0381111561395557613955613e2d565b60405190808252806020026020018201604052801561398857816020015b60608152602001906001900390816139735790505b50905060005b836060015151811015613afd578360c0015181815181106139b1576139b1614270565b60200260200101515a116139e4576139c8846126df565b6040516307aec4ab60e21b815260040161092091815260200190565b836060015181815181106139fa576139fa614270565b60200260200101516001600160a01b031684608001518281518110613a2157613a21614270565b60200260200101518560c001518381518110613a3f57613a3f614270565b6020026020010151908660a001518481518110613a5e57613a5e614270565b6020026020010151604051613a7391906146d5565b600060405180830381858888f193505050503d8060008114613ab1576040519150601f19603f3d011682016040523d82523d6000602084013e613ab6565b606091505b50848381518110613ac957613ac9614270565b60200260200101848481518110613ae257613ae2614270565b6020908102919091010191909152901515905260010161398e565b50915091565b50805460008255906000526020600020908101906112b791905b80821115613b315760008155600101613b1d565b5090565b60008083601f840112613b4757600080fd5b5081356001600160401b03811115613b5e57600080fd5b6020830191508360208260051b8501011115610b2757600080fd5b60008060008060008060608789031215613b9257600080fd5b86356001600160401b0380821115613ba957600080fd5b613bb58a838b01613b35565b90985096506020890135915080821115613bce57600080fd5b613bda8a838b01613b35565b90965094506040890135915080821115613bf357600080fd5b50613c0089828a01613b35565b979a9699509497509295939492505050565b60008151808452602080850194506020840160005b83811015613c45578151151587529582019590820190600101613c27565b509495945050505050565b6020815260006107216020830184613c12565b60008060208385031215613c7657600080fd5b82356001600160401b03811115613c8c57600080fd5b613c9885828601613b35565b90969095509350505050565b60008151808452602080850194506020840160005b83811015613c455781516001600160a01b031687529582019590820190600101613cb9565b6020815260006107216020830184613ca4565b600060208284031215613d0357600080fd5b5035919050565b60008083601f840112613d1c57600080fd5b5081356001600160401b03811115613d3357600080fd5b602083019150836020606083028501011115610b2757600080fd5b600080600080600060608688031215613d6657600080fd5b85356001600160401b0380821115613d7d57600080fd5b9087019060e0828a031215613d9157600080fd5b90955060208701359080821115613da757600080fd5b613db389838a01613b35565b90965094506040880135915080821115613dcc57600080fd5b50613dd988828901613d0a565b969995985093965092949392505050565b600080600080600060608688031215613e0257600080fd5b85356001600160401b0380821115613e1957600080fd5b9087019060c0828a031215613d9157600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715613e6557613e65613e2d565b60405290565b60405160c081016001600160401b0381118282101715613e6557613e65613e2d565b604051601f8201601f191681016001600160401b0381118282101715613eb557613eb5613e2d565b604052919050565b60006001600160401b03821115613ed657613ed6613e2d565b5060051b60200190565b600082601f830112613ef157600080fd5b81356020613f06613f0183613ebd565b613e8d565b80838252602082019150600560208560051b880101945087851115613f2a57600080fd5b602087015b85811015613f53578035828110613f465760008081fd5b8452928401928401613f2f565b5090979650505050505050565b80356001600160a01b0381168114610d6957600080fd5b600082601f830112613f8857600080fd5b81356020613f98613f0183613ebd565b8083825260208201915060208460051b870101935086841115613fba57600080fd5b602086015b84811015613fdd57613fd081613f60565b8352918301918301613fbf565b509695505050505050565b60008060408385031215613ffb57600080fd5b82356001600160401b038082111561401257600080fd5b61401e86838701613ee0565b9350602085013591508082111561403457600080fd5b5061404185828601613f77565b9150509250929050565b803560108110610d6957600080fd5b6000806040838503121561406d57600080fd5b6140768361404b565b915061408460208401613f60565b90509250929050565b60006020828403121561409f57600080fd5b61072182613f60565b600080604083850312156140bb57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b600581106112b7576112b76140ca565b60a081016140fd876140e0565b95815260208101949094526040840192909252606083015260809091015290565b60006020828403121561413057600080fd5b81356001600160401b0381111561414657600080fd5b6106ba84828501613f77565b60008151808452602080850194506020840160005b83811015613c455781516001600160601b031687529582019590820190600101614167565b60608152600061419f6060830186613ca4565b82810360208401526141b18186613ca4565b905082810360408401526141c58185614152565b9695505050505050565b6020815260006107216020830184614152565b6000602082840312156141f457600080fd5b6107218261404b565b634e487b7160e01b600052601160045260246000fd5b80820180821115610766576107666141fd565b81810381811115610766576107666141fd565b60008261425657634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610766576107666141fd565b60208101601083106142b1576142b16140ca565b91905290565b6040815260006142ca6040830185613ca4565b82810360208401526142dc8185613c12565b95945050505050565b6080815260006142f86080830187613c12565b828103602084015261430a8187614152565b9050828103604084015261431e8186613ca4565b905082810360608401526106158185613ca4565b6001600160e01b03198316815260408101600b8310614353576143536140ca565b8260208301529392505050565b600082601f83011261437157600080fd5b81356020614381613f0183613ebd565b8083825260208201915060208460051b8701019350868411156143a357600080fd5b602086015b84811015613fdd57803583529183019183016143a8565b6000601f83601f8401126143d257600080fd5b823560206143e2613f0183613ebd565b82815260059290921b8501810191818101908784111561440157600080fd5b8287015b848110156144975780356001600160401b03808211156144255760008081fd5b818a0191508a603f83011261443a5760008081fd5b8582013560408282111561445057614450613e2d565b614461828b01601f19168901613e8d565b92508183528c818386010111156144785760008081fd5b8181850189850137506000908201870152845250918301918301614405565b50979650505050505050565b600060e082360312156144b557600080fd5b6144bd613e43565b82358152602083013560208201526040830135604082015260608301356001600160401b03808211156144ef57600080fd5b6144fb36838701613f77565b6060840152608085013591508082111561451457600080fd5b61452036838701614360565b608084015260a085013591508082111561453957600080fd5b614545368387016143bf565b60a084015260c085013591508082111561455e57600080fd5b5061456b36828601614360565b60c08301525092915050565b600060c0823603121561458957600080fd5b614591613e6b565b823581526020830135602082015260408301356001600160401b03808211156145b957600080fd5b6145c536838701613ee0565b604084015260608501359150808211156145de57600080fd5b6145ea36838701614360565b6060840152608085013591508082111561460357600080fd5b61460f368387016143bf565b608084015260a085013591508082111561462857600080fd5b5061463536828601614360565b60a08301525092915050565b60005b8381101561465c578181015183820152602001614644565b50506000910152565b6001600160e01b0319831681528151600090614688816004850160208701614641565b919091016004019392505050565b600081518084526146ae816020860160208601614641565b601f01601f19169290920160200192915050565b6020815260006107216020830184614696565b600082516146e7818460208701614641565b9190910192915050565b60008282518085526020808601955060208260051b8401016020860160005b84811015613f5357601f1986840301895261472c838351614696565b98840198925090830190600101614710565b6080815260006147516080830187614696565b82810360208401526147638187613ca4565b905082810360408401526147778186613c12565b9050828103606084015261061581856146f1565b60408152600061479e6040830185613c12565b82810360208401526142dc8185613ca4565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6000602082840312156147e557600080fd5b8151801515811461072157600080fd5b60008151808452602080850194506020840160005b83811015613c455781518752958201959082019060010161480a565b600060e0830182518452602080840151602086015260408401516040860152606084015160e0606087015282815180855261010088019150602083019450600092505b808310156148925784516001600160a01b03168252938301936001929092019190830190614869565b506080860151935086810360808801526148ac81856147f5565b935050505060a083015184820360a08601526148c882826146f1565b91505060c083015184820360c08601526142dc82826147f5565b6040815260006148f56040830185614826565b905060018060a01b03831660208301529392505050565b60006020828403121561491e57600080fd5b81356002811061072157600080fd5b60006020828403121561493f57600080fd5b813560ff8116811461072157600080fd5b600060018201614962576149626141fd565b5060010190565b60808152600061497c6080830187614826565b60208681850152838203604085015260c08201865183528187015182840152604087015160c0604085015281815180845260e0860191508483019350600092505b808310156149e65783516149d0816140e0565b82529284019260019290920191908401906149bd565b50606089015193508481036060860152614a0081856147f5565b935050505060808601518282036080840152614a1c82826146f1565b91505060a086015182820360a0840152614a3682826147f5565b93505050506142dc60608301846001600160a01b03169052565b634e487b7160e01b600052603160045260246000fd5b604081526000614a796040830185613c12565b82810360208401526142dc81856146f156fe5da136eb38f8d8e354915fc8a767c0dc81d49de5fb65d5477122a82ddd976240ac1ff16a4f04f2a37a9ba5252a69baa100b460e517d1f8019c054a5ad698f9ffc55405a488814eaa0e2a685a0131142785b8d033d311c8c8244e34a7c12ca40f88547008e60f5748911f2e59feb3093b7e4c2e87b2dd69d61f112fcc932de8e38400683eb2cb350596d73644c0c89fe45f108600003457374f4ab3e87b4f3aa3d38c234075fde25875da8a6b7e36b58b86681d483271a99eeeee1d78e258a24d6924fe71b0c8b61aea02ca498b5f53b29bd95726278b1fe4eb791bb24a42644ca2646970667358221220cb0e92b2033c9131bafd8c90a491e8241ace110667169406b1c1a69bc857723964736f6c634300081700335da136eb38f8d8e354915fc8a767c0dc81d49de5fb65d5477122a82ddd976240c55405a488814eaa0e2a685a0131142785b8d033d311c8c8244e34a7c12ca40f92872d32822c9d44b36a2537d3e0d4c46fc4de1ce154ccfaed560a8a58445f1d",
  "chainId": 11155111,
  "contractAbsolutePath": "MainchainBridgeManager.sol",
  "deployedBytecode": "",
  "deployer": "0x31762cdd4Aa65CD6f5F09D7a05a56211720A1168",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "addBridgeOperators(uint96[],address[],address[])": {
        "details": "Adds multiple bridge operators.",
        "params": {
          "bridgeOperators": "An array of addresses representing the bridge operators to add.",
          "governors": "An array of addresses of hot/cold wallets for bridge operator to update their node address."
        },
        "returns": {
          "addeds": "An array of booleans indicating whether each bridge operator was added successfully. Note: return boolean array `addeds` indicates whether a group (voteWeight, governor, operator) are recorded. It is expected that FE/BE staticcall to the function first to get the return values and handle it correctly. Governors are expected to see the outcome of this function and decide if they want to vote for the proposal or not. Example Usage: Making an `eth_call` in ethers.js ``` const {addeds} = await bridgeManagerContract.callStatic.addBridgeOperators(  voteWeights,  governors,  bridgeOperators,  // overriding the caller to the contract itself since we use `onlySelfCall` guard  {from: bridgeManagerContract.address} ) const filteredOperators = bridgeOperators.filter((_, index) => addeds[index]); const filteredWeights = weights.filter((_, index) => addeds[index]); const filteredGovernors = governors.filter((_, index) => addeds[index]); // ... (Process or use the information as required) ... ```"
        }
      },
      "checkThreshold(uint256)": {
        "details": "Checks whether the `_voteWeight` passes the threshold."
      },
      "getBridgeOperatorOf(address[])": {
        "details": "Returns an array of bridge operators correspoding to governor addresses.",
        "returns": {
          "bridgeOperators": "An array containing the addresses of all bridge operators."
        }
      },
      "getBridgeOperatorWeight(address)": {
        "details": "External function to retrieve the vote weight of a specific bridge operator.",
        "params": {
          "bridgeOperator": "The address of the bridge operator to get the vote weight for."
        },
        "returns": {
          "weight": "The vote weight of the specified bridge operator."
        }
      },
      "getBridgeOperators()": {
        "details": "Returns an array of all bridge operators.",
        "returns": {
          "_0": "An array containing the addresses of all bridge operators."
        }
      },
      "getCallbackRegisters()": {
        "details": "Retrieves the addresses of registered callbacks.",
        "returns": {
          "registers": "An array containing the addresses of registered callbacks."
        }
      },
      "getContract(uint8)": {
        "details": "Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.",
        "params": {
          "contractType": "The role of the contract to retrieve."
        },
        "returns": {
          "contract_": "The address of the contract with the specified role."
        }
      },
      "getFullBridgeOperatorInfos()": {
        "details": "Retrieves the full information of all registered bridge operators. This external function allows external callers to obtain the full information of all the registered bridge operators. The returned arrays include the addresses of governors, bridge operators, and their corresponding vote weights.",
        "returns": {
          "bridgeOperators": "An array of addresses representing the registered bridge operators.",
          "governors": "An array of addresses representing the governors of each bridge operator.",
          "weights": "An array of uint256 values representing the vote weights of each bridge operator. Note: The length of each array will be the same, and the order of elements corresponds to the same bridge operator. Example Usage: ``` (address[] memory governors, address[] memory bridgeOperators, uint256[] memory weights) = getFullBridgeOperatorInfos(); for (uint256 i = 0; i < bridgeOperators.length; i++) {     // Access individual information for each bridge operator.     address governor = governors[i];     address bridgeOperator = bridgeOperators[i];     uint256 weight = weights[i];     // ... (Process or use the information as required) ... } ```"
        }
      },
      "getGovernorWeight(address)": {
        "details": "External function to retrieve the vote weight of a specific governor.",
        "params": {
          "governor": "The address of the governor to get the vote weight for."
        },
        "returns": {
          "weight": "voteWeight The vote weight of the specified governor."
        }
      },
      "getGovernorWeights(address[])": {
        "details": "Returns the weights of a list of governor addresses."
      },
      "getGovernors()": {
        "details": "Returns an array of all governors.",
        "returns": {
          "_0": "An array containing the addresses of all governors."
        }
      },
      "getGovernorsOf(address[])": {
        "details": "Retrieves the governors corresponding to a given array of bridge operators. This external function allows external callers to obtain the governors associated with a given array of bridge operators. The function takes an input array `bridgeOperators` containing bridge operator addresses and returns an array of corresponding governors.",
        "params": {
          "bridgeOperators": "An array of bridge operator addresses for which governors are to be retrieved."
        },
        "returns": {
          "governors": "An array of addresses representing the governors corresponding to the provided bridge operators."
        }
      },
      "getProposalExpiryDuration()": {
        "details": "Returns the expiry duration for a new proposal."
      },
      "getThreshold()": {
        "details": "Returns the threshold."
      },
      "getTotalWeight()": {
        "details": "Returns total weights."
      },
      "globalProposalRelayed(uint256)": {
        "details": "Returns whether the voter `_voter` casted vote for the proposal."
      },
      "isBridgeOperator(address)": {
        "details": "Checks if the given address is a bridge operator.",
        "params": {
          "addr": "The address to check."
        },
        "returns": {
          "_0": "A boolean indicating whether the address is a bridge operator."
        }
      },
      "minimumVoteWeight()": {
        "details": "Returns the minimum vote weight to pass the threshold."
      },
      "registerCallbacks(address[])": {
        "details": "Registers multiple callbacks with the bridge.",
        "params": {
          "registers": "The array of callback addresses to register."
        },
        "returns": {
          "registereds": "An array indicating the success status of each registration."
        }
      },
      "relayGlobalProposal((uint256,uint256,uint8[],uint256[],bytes[],uint256[]),uint8[],(uint8,bytes32,bytes32)[])": {
        "details": "See `GovernanceRelay-_relayGlobalProposal`.  Requirements: - The method caller is governor."
      },
      "relayProposal((uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),uint8[],(uint8,bytes32,bytes32)[])": {
        "details": "See `GovernanceRelay-_relayProposal`. Requirements: - The method caller is governor."
      },
      "removeBridgeOperators(address[])": {
        "details": "Removes multiple bridge operators.",
        "params": {
          "bridgeOperators": "An array of addresses representing the bridge operators to remove."
        },
        "returns": {
          "removeds": "An array of booleans indicating whether each bridge operator was removed successfully. * Note: return boolean array `removeds` indicates whether a group (voteWeight, governor, operator) are recorded. It is expected that FE/BE staticcall to the function first to get the return values and handle it correctly. Governors are expected to see the outcome of this function and decide if they want to vote for the proposal or not. Example Usage: Making an `eth_call` in ethers.js ``` const {removeds} = await bridgeManagerContract.callStatic.removeBridgeOperators(  bridgeOperators,  // overriding the caller to the contract itself since we use `onlySelfCall` guard  {from: bridgeManagerContract.address} ) const filteredOperators = bridgeOperators.filter((_, index) => removeds[index]); // ... (Process or use the information as required) ... ```"
        }
      },
      "resolveTargets(uint8[])": {
        "details": "Returns corresponding address of target options. Return address(0) on non-existent target."
      },
      "setContract(uint8,address)": {
        "details": "Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.",
        "params": {
          "addr": "The address of the contract to set.",
          "contractType": "The role of the contract to set."
        }
      },
      "setThreshold(uint256,uint256)": {
        "details": "Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event."
      },
      "sumGovernorsWeight(address[])": {
        "details": "Returns total weights of the governor list."
      },
      "totalBridgeOperator()": {
        "details": "Returns the total number of bridge operators.",
        "returns": {
          "_0": "The total number of bridge operators."
        }
      },
      "unregisterCallbacks(address[])": {
        "details": "Unregisters multiple callbacks from the bridge.",
        "params": {
          "registers": "The array of callback addresses to unregister."
        },
        "returns": {
          "unregistereds": "An array indicating the success status of each unregistration."
        }
      },
      "updateBridgeOperator(address)": {
        "details": "Governor updates their corresponding governor and/or operator address. Requirements: - The caller must the governor of the operator that is requested changes.",
        "params": {
          "bridgeOperator": "The address of the bridge operator to update."
        }
      },
      "updateManyTargetOption(uint8[],address[])": {
        "details": "Updates list of `targetOptions` to `targets`. Requirement: - Only allow self-call through proposal. "
      }
    },
    "events": {
      "BridgeOperatorUpdated(address,address,address)": {
        "details": "Emitted when a bridge operator is updated.",
        "params": {
          "fromBridgeOperator": "The address of the bridge operator being updated.",
          "governor": "The address of the governor initiating the update.",
          "toBridgeOperator": "The updated address of the bridge operator."
        }
      },
      "BridgeOperatorsAdded(bool[],uint96[],address[],address[])": {
        "details": "Emitted when new bridge operators are added.",
        "params": {
          "bridgeOperators": "The array of addresses representing the added bridge operators.",
          "governors": "The array of addresses representing the governors associated with the added bridge operators.",
          "statuses": "The array of boolean values represents whether the corresponding bridge operator is added successfully.",
          "voteWeights": "The array of vote weights assigned to the added bridge operators."
        }
      },
      "BridgeOperatorsRemoved(bool[],address[])": {
        "details": "Emitted when bridge operators are removed.",
        "params": {
          "bridgeOperators": "The array of addresses representing the removed bridge operators.",
          "statuses": "The array of boolean values representing the statuses of the removed bridge operators."
        }
      },
      "ContractUpdated(uint8,address)": {
        "details": "Emitted when a contract is updated."
      },
      "GlobalProposalCreated(uint256,bytes32,(uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),bytes32,(uint256,uint256,uint8[],uint256[],bytes[],uint256[]),address)": {
        "details": "Emitted when a proposal is created"
      },
      "Notified(bytes,address[],bool[],bytes[])": {
        "details": "Emitted when the contract notifies multiple registers with statuses and return data."
      },
      "ProposalApproved(bytes32)": {
        "details": "Emitted when the proposal is approved"
      },
      "ProposalCreated(uint256,uint256,bytes32,(uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),address)": {
        "details": "Emitted when a proposal is created"
      },
      "ProposalExecuted(bytes32,bool[],bytes[])": {
        "details": "Emitted when the proposal is executed"
      },
      "ProposalExpired(bytes32)": {
        "details": "Emitted when the vote is expired"
      },
      "ProposalExpiryDurationChanged(uint256)": {
        "details": "Emitted when the proposal expiry duration is changed."
      },
      "ProposalRejected(bytes32)": {
        "details": "Emitted when the vote is reject"
      },
      "ProposalVoted(bytes32,address,uint8,uint256)": {
        "details": "Emitted when the proposal is voted"
      },
      "TargetOptionUpdated(uint8,address)": {
        "details": "Emitted when the target options are updated"
      },
      "ThresholdUpdated(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Emitted when the threshold is updated"
      }
    },
    "errors": {
      "ErrBridgeOperatorAlreadyExisted(address)": [
        {
          "details": "Error thrown when attempting to add a bridge operator that already exists in the contract. This error indicates that the provided bridge operator address is already registered as a bridge operator in the contract."
        }
      ],
      "ErrBridgeOperatorUpdateFailed(address)": [
        {
          "details": "Error raised when a bridge operator update operation fails.",
          "params": {
            "bridgeOperator": "The address of the bridge operator that failed to update."
          }
        }
      ],
      "ErrContractTypeNotFound(uint8)": [
        {
          "details": "Error of invalid role."
        }
      ],
      "ErrCurrentProposalIsNotCompleted()": [
        {
          "details": "Error thrown when the current proposal is not completed."
        }
      ],
      "ErrDuplicated(bytes4)": [
        {
          "details": "Error thrown when a duplicated element is detected in an array.",
          "params": {
            "msgSig": "The function signature that invoke the error."
          }
        }
      ],
      "ErrInsufficientGas(bytes32)": [
        {
          "details": "Error thrown when there is insufficient gas to execute a function."
        }
      ],
      "ErrInvalidArguments(bytes4)": [
        {
          "details": "Error indicating that arguments are invalid."
        }
      ],
      "ErrInvalidChainId(bytes4,uint256,uint256)": [
        {
          "details": "Error indicating that the chain ID is invalid.",
          "params": {
            "actual": "Current chain ID that executing function.",
            "expected": "Expected chain ID required for the tx to success.",
            "msgSig": "The function signature (bytes4) of the operation that encountered an invalid chain ID."
          }
        }
      ],
      "ErrInvalidExpiryTimestamp()": [
        {
          "details": "Error thrown when an invalid expiry timestamp is provided."
        }
      ],
      "ErrInvalidOrder(bytes4)": [
        {
          "details": "Error indicating that an order is invalid.",
          "params": {
            "msgSig": "The function signature (bytes4) of the operation that encountered an invalid order."
          }
        }
      ],
      "ErrInvalidProposalNonce(bytes4)": [
        {
          "details": "Error indicating that the proposal nonce is invalid.",
          "params": {
            "msgSig": "The function signature (bytes4) of the operation that encountered an invalid proposal nonce."
          }
        }
      ],
      "ErrInvalidThreshold(bytes4)": [
        {
          "details": "Error indicating that the provided threshold is invalid for a specific function signature.",
          "params": {
            "msgSig": "The function signature (bytes4) that the invalid threshold applies to."
          }
        }
      ],
      "ErrInvalidVoteWeight(bytes4)": [
        {
          "details": "Error indicating that a vote weight is invalid for a specific function signature.",
          "params": {
            "msgSig": "The function signature (bytes4) that encountered an invalid vote weight."
          }
        }
      ],
      "ErrLengthMismatch(bytes4)": [
        {
          "details": "Error indicating a mismatch in the length of input parameters or arrays for a specific function.",
          "params": {
            "msgSig": "The function signature (bytes4) that has a length mismatch."
          }
        }
      ],
      "ErrOnlySelfCall(bytes4)": [
        {
          "details": "Error indicating that a function can only be called by the contract itself.",
          "params": {
            "msgSig": "The function signature (bytes4) that can only be called by the contract itself."
          }
        }
      ],
      "ErrRelayFailed(bytes4)": [
        {
          "details": "Error indicating that a relay call has failed.",
          "params": {
            "msgSig": "The function signature (bytes4) of the relay call that failed."
          }
        }
      ],
      "ErrUnauthorized(bytes4,uint8)": [
        {
          "details": "Error indicating that the caller is unauthorized to perform a specific function.",
          "params": {
            "expectedRole": "The role required to perform the function.",
            "msgSig": "The function signature (bytes4) that the caller is unauthorized to perform."
          }
        }
      ],
      "ErrUnsupportedInterface(bytes4,address)": [
        {
          "details": "The error indicating an unsupported interface.",
          "params": {
            "addr": "The address where the unsupported interface was encountered.",
            "interfaceId": "The bytes4 interface identifier that is not supported."
          }
        }
      ],
      "ErrUnsupportedVoteType(bytes4)": [
        {
          "details": "Error indicating that a vote type is not supported.",
          "params": {
            "msgSig": "The function signature (bytes4) of the operation that encountered an unsupported vote type."
          }
        }
      ],
      "ErrVoteIsFinalized()": [
        {
          "details": "Error thrown when attempting to interact with a finalized vote."
        }
      ],
      "ErrZeroAddress(bytes4)": [
        {
          "details": "Error indicating that given address is null when it should not."
        }
      ],
      "ErrZeroCodeContract(address)": [
        {
          "details": "Error of set to non-contract."
        }
      ]
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roninChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bridgeContract\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"callbackRegisters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"voteWeights\",\"type\":\"uint96[]\"},{\"internalType\":\"enum GlobalProposal.TargetOption[]\",\"name\":\"targetOptions\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeOperator\",\"type\":\"address\"}],\"name\":\"ErrBridgeOperatorAlreadyExisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeOperator\",\"type\":\"address\"}],\"name\":\"ErrBridgeOperatorUpdateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"ErrContractTypeNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrCurrentProposalIsNotCompleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrDuplicated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"name\":\"ErrInsufficientGas\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrInvalidArguments\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"ErrInvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidExpiryTimestamp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrInvalidOrder\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrInvalidProposalNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrInvalidThreshold\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrInvalidVoteWeight\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrOnlySelfCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrRelayFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"enum RoleAccess\",\"name\":\"expectedRole\",\"type\":\"uint8\"}],\"name\":\"ErrUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ErrUnsupportedInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrUnsupportedVoteType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrVoteIsFinalized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ErrZeroCodeContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromBridgeOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toBridgeOperator\",\"type\":\"address\"}],\"name\":\"BridgeOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"},{\"indexed\":false,\"internalType\":\"uint96[]\",\"name\":\"voteWeights\",\"type\":\"uint96[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"name\":\"BridgeOperatorsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"name\":\"BridgeOperatorsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasAmounts\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct Proposal.ProposalDetail\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"globalProposalHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum GlobalProposal.TargetOption[]\",\"name\":\"targetOptions\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasAmounts\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct GlobalProposal.GlobalProposalDetail\",\"name\":\"globalProposal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"GlobalProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"registers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"returnDatas\",\"type\":\"bytes[]\"}],\"name\":\"Notified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasAmounts\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct Proposal.ProposalDetail\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"successCalls\",\"type\":\"bool[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"returnDatas\",\"type\":\"bytes[]\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"name\":\"ProposalExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"ProposalExpiryDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"name\":\"ProposalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Ballot.VoteType\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"ProposalVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum GlobalProposal.TargetOption\",\"name\":\"targetOption\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TargetOptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousDenominator\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96[]\",\"name\":\"voteWeights\",\"type\":\"uint96[]\"},{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"name\":\"addBridgeOperators\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"addeds\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voteWeight\",\"type\":\"uint256\"}],\"name\":\"checkThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"}],\"name\":\"getBridgeOperatorOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeOperator\",\"type\":\"address\"}],\"name\":\"getBridgeOperatorWeight\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBridgeOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallbackRegisters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"registers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFullBridgeOperatorInfos\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"weights\",\"type\":\"uint96[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"getGovernorWeight\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"}],\"name\":\"getGovernorWeights\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"weights\",\"type\":\"uint96[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"name\":\"getGovernorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposalExpiryDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"num_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denom_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"globalProposalRelayed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isBridgeOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVoteWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"registers\",\"type\":\"address[]\"}],\"name\":\"registerCallbacks\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"registereds\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum GlobalProposal.TargetOption[]\",\"name\":\"targetOptions\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct GlobalProposal.GlobalProposalDetail\",\"name\":\"globalProposal\",\"type\":\"tuple\"},{\"internalType\":\"enum Ballot.VoteType[]\",\"name\":\"supports_\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SignatureConsumer.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"name\":\"relayGlobalProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Proposal.ProposalDetail\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"enum Ballot.VoteType[]\",\"name\":\"supports_\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SignatureConsumer.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"name\":\"relayProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bridgeOperators\",\"type\":\"address[]\"}],\"name\":\"removeBridgeOperators\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"removeds\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum GlobalProposal.TargetOption[]\",\"name\":\"targetOptions\",\"type\":\"uint8[]\"}],\"name\":\"resolveTargets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"round\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"governors\",\"type\":\"address[]\"}],\"name\":\"sumGovernorsWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBridgeOperator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"registers\",\"type\":\"address[]\"}],\"name\":\"unregisterCallbacks\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"unregistereds\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBridgeOperator\",\"type\":\"address\"}],\"name\":\"updateBridgeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum GlobalProposal.TargetOption[]\",\"name\":\"targetOptions\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"updateManyTargetOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"enum VoteStatusConsumer.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"againstVoteWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVoteWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ErrBridgeOperatorAlreadyExisted(address)\":[{\"details\":\"Error thrown when attempting to add a bridge operator that already exists in the contract. This error indicates that the provided bridge operator address is already registered as a bridge operator in the contract.\"}],\"ErrBridgeOperatorUpdateFailed(address)\":[{\"details\":\"Error raised when a bridge operator update operation fails.\",\"params\":{\"bridgeOperator\":\"The address of the bridge operator that failed to update.\"}}],\"ErrContractTypeNotFound(uint8)\":[{\"details\":\"Error of invalid role.\"}],\"ErrCurrentProposalIsNotCompleted()\":[{\"details\":\"Error thrown when the current proposal is not completed.\"}],\"ErrDuplicated(bytes4)\":[{\"details\":\"Error thrown when a duplicated element is detected in an array.\",\"params\":{\"msgSig\":\"The function signature that invoke the error.\"}}],\"ErrInsufficientGas(bytes32)\":[{\"details\":\"Error thrown when there is insufficient gas to execute a function.\"}],\"ErrInvalidArguments(bytes4)\":[{\"details\":\"Error indicating that arguments are invalid.\"}],\"ErrInvalidChainId(bytes4,uint256,uint256)\":[{\"details\":\"Error indicating that the chain ID is invalid.\",\"params\":{\"actual\":\"Current chain ID that executing function.\",\"expected\":\"Expected chain ID required for the tx to success.\",\"msgSig\":\"The function signature (bytes4) of the operation that encountered an invalid chain ID.\"}}],\"ErrInvalidExpiryTimestamp()\":[{\"details\":\"Error thrown when an invalid expiry timestamp is provided.\"}],\"ErrInvalidOrder(bytes4)\":[{\"details\":\"Error indicating that an order is invalid.\",\"params\":{\"msgSig\":\"The function signature (bytes4) of the operation that encountered an invalid order.\"}}],\"ErrInvalidProposalNonce(bytes4)\":[{\"details\":\"Error indicating that the proposal nonce is invalid.\",\"params\":{\"msgSig\":\"The function signature (bytes4) of the operation that encountered an invalid proposal nonce.\"}}],\"ErrInvalidThreshold(bytes4)\":[{\"details\":\"Error indicating that the provided threshold is invalid for a specific function signature.\",\"params\":{\"msgSig\":\"The function signature (bytes4) that the invalid threshold applies to.\"}}],\"ErrInvalidVoteWeight(bytes4)\":[{\"details\":\"Error indicating that a vote weight is invalid for a specific function signature.\",\"params\":{\"msgSig\":\"The function signature (bytes4) that encountered an invalid vote weight.\"}}],\"ErrLengthMismatch(bytes4)\":[{\"details\":\"Error indicating a mismatch in the length of input parameters or arrays for a specific function.\",\"params\":{\"msgSig\":\"The function signature (bytes4) that has a length mismatch.\"}}],\"ErrOnlySelfCall(bytes4)\":[{\"details\":\"Error indicating that a function can only be called by the contract itself.\",\"params\":{\"msgSig\":\"The function signature (bytes4) that can only be called by the contract itself.\"}}],\"ErrRelayFailed(bytes4)\":[{\"details\":\"Error indicating that a relay call has failed.\",\"params\":{\"msgSig\":\"The function signature (bytes4) of the relay call that failed.\"}}],\"ErrUnauthorized(bytes4,uint8)\":[{\"details\":\"Error indicating that the caller is unauthorized to perform a specific function.\",\"params\":{\"expectedRole\":\"The role required to perform the function.\",\"msgSig\":\"The function signature (bytes4) that the caller is unauthorized to perform.\"}}],\"ErrUnsupportedInterface(bytes4,address)\":[{\"details\":\"The error indicating an unsupported interface.\",\"params\":{\"addr\":\"The address where the unsupported interface was encountered.\",\"interfaceId\":\"The bytes4 interface identifier that is not supported.\"}}],\"ErrUnsupportedVoteType(bytes4)\":[{\"details\":\"Error indicating that a vote type is not supported.\",\"params\":{\"msgSig\":\"The function signature (bytes4) of the operation that encountered an unsupported vote type.\"}}],\"ErrVoteIsFinalized()\":[{\"details\":\"Error thrown when attempting to interact with a finalized vote.\"}],\"ErrZeroAddress(bytes4)\":[{\"details\":\"Error indicating that given address is null when it should not.\"}],\"ErrZeroCodeContract(address)\":[{\"details\":\"Error of set to non-contract.\"}]},\"events\":{\"BridgeOperatorUpdated(address,address,address)\":{\"details\":\"Emitted when a bridge operator is updated.\",\"params\":{\"fromBridgeOperator\":\"The address of the bridge operator being updated.\",\"governor\":\"The address of the governor initiating the update.\",\"toBridgeOperator\":\"The updated address of the bridge operator.\"}},\"BridgeOperatorsAdded(bool[],uint96[],address[],address[])\":{\"details\":\"Emitted when new bridge operators are added.\",\"params\":{\"bridgeOperators\":\"The array of addresses representing the added bridge operators.\",\"governors\":\"The array of addresses representing the governors associated with the added bridge operators.\",\"statuses\":\"The array of boolean values represents whether the corresponding bridge operator is added successfully.\",\"voteWeights\":\"The array of vote weights assigned to the added bridge operators.\"}},\"BridgeOperatorsRemoved(bool[],address[])\":{\"details\":\"Emitted when bridge operators are removed.\",\"params\":{\"bridgeOperators\":\"The array of addresses representing the removed bridge operators.\",\"statuses\":\"The array of boolean values representing the statuses of the removed bridge operators.\"}},\"ContractUpdated(uint8,address)\":{\"details\":\"Emitted when a contract is updated.\"},\"GlobalProposalCreated(uint256,bytes32,(uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),bytes32,(uint256,uint256,uint8[],uint256[],bytes[],uint256[]),address)\":{\"details\":\"Emitted when a proposal is created\"},\"Notified(bytes,address[],bool[],bytes[])\":{\"details\":\"Emitted when the contract notifies multiple registers with statuses and return data.\"},\"ProposalApproved(bytes32)\":{\"details\":\"Emitted when the proposal is approved\"},\"ProposalCreated(uint256,uint256,bytes32,(uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),address)\":{\"details\":\"Emitted when a proposal is created\"},\"ProposalExecuted(bytes32,bool[],bytes[])\":{\"details\":\"Emitted when the proposal is executed\"},\"ProposalExpired(bytes32)\":{\"details\":\"Emitted when the vote is expired\"},\"ProposalExpiryDurationChanged(uint256)\":{\"details\":\"Emitted when the proposal expiry duration is changed.\"},\"ProposalRejected(bytes32)\":{\"details\":\"Emitted when the vote is reject\"},\"ProposalVoted(bytes32,address,uint8,uint256)\":{\"details\":\"Emitted when the proposal is voted\"},\"TargetOptionUpdated(uint8,address)\":{\"details\":\"Emitted when the target options are updated\"},\"ThresholdUpdated(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the threshold is updated\"}},\"kind\":\"dev\",\"methods\":{\"addBridgeOperators(uint96[],address[],address[])\":{\"details\":\"Adds multiple bridge operators.\",\"params\":{\"bridgeOperators\":\"An array of addresses representing the bridge operators to add.\",\"governors\":\"An array of addresses of hot/cold wallets for bridge operator to update their node address.\"},\"returns\":{\"addeds\":\"An array of booleans indicating whether each bridge operator was added successfully. Note: return boolean array `addeds` indicates whether a group (voteWeight, governor, operator) are recorded. It is expected that FE/BE staticcall to the function first to get the return values and handle it correctly. Governors are expected to see the outcome of this function and decide if they want to vote for the proposal or not. Example Usage: Making an `eth_call` in ethers.js ``` const {addeds} = await bridgeManagerContract.callStatic.addBridgeOperators(  voteWeights,  governors,  bridgeOperators,  // overriding the caller to the contract itself since we use `onlySelfCall` guard  {from: bridgeManagerContract.address} ) const filteredOperators = bridgeOperators.filter((_, index) => addeds[index]); const filteredWeights = weights.filter((_, index) => addeds[index]); const filteredGovernors = governors.filter((_, index) => addeds[index]); // ... (Process or use the information as required) ... ```\"}},\"checkThreshold(uint256)\":{\"details\":\"Checks whether the `_voteWeight` passes the threshold.\"},\"getBridgeOperatorOf(address[])\":{\"details\":\"Returns an array of bridge operators correspoding to governor addresses.\",\"returns\":{\"bridgeOperators\":\"An array containing the addresses of all bridge operators.\"}},\"getBridgeOperatorWeight(address)\":{\"details\":\"External function to retrieve the vote weight of a specific bridge operator.\",\"params\":{\"bridgeOperator\":\"The address of the bridge operator to get the vote weight for.\"},\"returns\":{\"weight\":\"The vote weight of the specified bridge operator.\"}},\"getBridgeOperators()\":{\"details\":\"Returns an array of all bridge operators.\",\"returns\":{\"_0\":\"An array containing the addresses of all bridge operators.\"}},\"getCallbackRegisters()\":{\"details\":\"Retrieves the addresses of registered callbacks.\",\"returns\":{\"registers\":\"An array containing the addresses of registered callbacks.\"}},\"getContract(uint8)\":{\"details\":\"Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.\",\"params\":{\"contractType\":\"The role of the contract to retrieve.\"},\"returns\":{\"contract_\":\"The address of the contract with the specified role.\"}},\"getFullBridgeOperatorInfos()\":{\"details\":\"Retrieves the full information of all registered bridge operators. This external function allows external callers to obtain the full information of all the registered bridge operators. The returned arrays include the addresses of governors, bridge operators, and their corresponding vote weights.\",\"returns\":{\"bridgeOperators\":\"An array of addresses representing the registered bridge operators.\",\"governors\":\"An array of addresses representing the governors of each bridge operator.\",\"weights\":\"An array of uint256 values representing the vote weights of each bridge operator. Note: The length of each array will be the same, and the order of elements corresponds to the same bridge operator. Example Usage: ``` (address[] memory governors, address[] memory bridgeOperators, uint256[] memory weights) = getFullBridgeOperatorInfos(); for (uint256 i = 0; i < bridgeOperators.length; i++) {     // Access individual information for each bridge operator.     address governor = governors[i];     address bridgeOperator = bridgeOperators[i];     uint256 weight = weights[i];     // ... (Process or use the information as required) ... } ```\"}},\"getGovernorWeight(address)\":{\"details\":\"External function to retrieve the vote weight of a specific governor.\",\"params\":{\"governor\":\"The address of the governor to get the vote weight for.\"},\"returns\":{\"weight\":\"voteWeight The vote weight of the specified governor.\"}},\"getGovernorWeights(address[])\":{\"details\":\"Returns the weights of a list of governor addresses.\"},\"getGovernors()\":{\"details\":\"Returns an array of all governors.\",\"returns\":{\"_0\":\"An array containing the addresses of all governors.\"}},\"getGovernorsOf(address[])\":{\"details\":\"Retrieves the governors corresponding to a given array of bridge operators. This external function allows external callers to obtain the governors associated with a given array of bridge operators. The function takes an input array `bridgeOperators` containing bridge operator addresses and returns an array of corresponding governors.\",\"params\":{\"bridgeOperators\":\"An array of bridge operator addresses for which governors are to be retrieved.\"},\"returns\":{\"governors\":\"An array of addresses representing the governors corresponding to the provided bridge operators.\"}},\"getProposalExpiryDuration()\":{\"details\":\"Returns the expiry duration for a new proposal.\"},\"getThreshold()\":{\"details\":\"Returns the threshold.\"},\"getTotalWeight()\":{\"details\":\"Returns total weights.\"},\"globalProposalRelayed(uint256)\":{\"details\":\"Returns whether the voter `_voter` casted vote for the proposal.\"},\"isBridgeOperator(address)\":{\"details\":\"Checks if the given address is a bridge operator.\",\"params\":{\"addr\":\"The address to check.\"},\"returns\":{\"_0\":\"A boolean indicating whether the address is a bridge operator.\"}},\"minimumVoteWeight()\":{\"details\":\"Returns the minimum vote weight to pass the threshold.\"},\"registerCallbacks(address[])\":{\"details\":\"Registers multiple callbacks with the bridge.\",\"params\":{\"registers\":\"The array of callback addresses to register.\"},\"returns\":{\"registereds\":\"An array indicating the success status of each registration.\"}},\"relayGlobalProposal((uint256,uint256,uint8[],uint256[],bytes[],uint256[]),uint8[],(uint8,bytes32,bytes32)[])\":{\"details\":\"See `GovernanceRelay-_relayGlobalProposal`.  Requirements: - The method caller is governor.\"},\"relayProposal((uint256,uint256,uint256,address[],uint256[],bytes[],uint256[]),uint8[],(uint8,bytes32,bytes32)[])\":{\"details\":\"See `GovernanceRelay-_relayProposal`. Requirements: - The method caller is governor.\"},\"removeBridgeOperators(address[])\":{\"details\":\"Removes multiple bridge operators.\",\"params\":{\"bridgeOperators\":\"An array of addresses representing the bridge operators to remove.\"},\"returns\":{\"removeds\":\"An array of booleans indicating whether each bridge operator was removed successfully. * Note: return boolean array `removeds` indicates whether a group (voteWeight, governor, operator) are recorded. It is expected that FE/BE staticcall to the function first to get the return values and handle it correctly. Governors are expected to see the outcome of this function and decide if they want to vote for the proposal or not. Example Usage: Making an `eth_call` in ethers.js ``` const {removeds} = await bridgeManagerContract.callStatic.removeBridgeOperators(  bridgeOperators,  // overriding the caller to the contract itself since we use `onlySelfCall` guard  {from: bridgeManagerContract.address} ) const filteredOperators = bridgeOperators.filter((_, index) => removeds[index]); // ... (Process or use the information as required) ... ```\"}},\"resolveTargets(uint8[])\":{\"details\":\"Returns corresponding address of target options. Return address(0) on non-existent target.\"},\"setContract(uint8,address)\":{\"details\":\"Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.\",\"params\":{\"addr\":\"The address of the contract to set.\",\"contractType\":\"The role of the contract to set.\"}},\"setThreshold(uint256,uint256)\":{\"details\":\"Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event.\"},\"sumGovernorsWeight(address[])\":{\"details\":\"Returns total weights of the governor list.\"},\"totalBridgeOperator()\":{\"details\":\"Returns the total number of bridge operators.\",\"returns\":{\"_0\":\"The total number of bridge operators.\"}},\"unregisterCallbacks(address[])\":{\"details\":\"Unregisters multiple callbacks from the bridge.\",\"params\":{\"registers\":\"The array of callback addresses to unregister.\"},\"returns\":{\"unregistereds\":\"An array indicating the success status of each unregistration.\"}},\"updateBridgeOperator(address)\":{\"details\":\"Governor updates their corresponding governor and/or operator address. Requirements: - The caller must the governor of the operator that is requested changes.\",\"params\":{\"bridgeOperator\":\"The address of the bridge operator to update.\"}},\"updateManyTargetOption(uint8[],address[])\":{\"details\":\"Updates list of `targetOptions` to `targets`. Requirement: - Only allow self-call through proposal. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"round(uint256)\":{\"notice\":\"chain id = 0 for global proposal\"},\"updateBridgeOperator(address)\":{\"notice\":\"This method checks authorization by querying the corresponding operator of the msg.sender and then attempts to remove it from the `_bridgeOperatorSet` for gas optimization. In case we allow a governor can leave their operator address blank null `address(0)`, consider add authorization check.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mainchain/MainchainBridgeManager.sol\":\"MainchainBridgeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/math/=lib/prb-math/\",\":@prb/test/=lib/prb-test/src/\",\":@ronin/contracts/=src/\",\":@ronin/script/=script/\",\":@ronin/test/=test/\",\":contract-libs/=lib/foundry-deployment-kit/lib/contract-libs/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c4477d480bac20d681ade0e712b77ad828acf530a1d5c0abc5fb78068a05a1\",\"dweb:/ipfs/QmdBqsK8CcUceTeWzhHwFDEvKMoHimwtV96Lbim7ZBtCb8\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"src/extensions/TransparentUpgradeableProxyV2.sol\":{\"keccak256\":\"0x6609392ea7d3174439b5715100bee82528fe6e4aff28927d48c27db8475e88c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370c93bc1e962fcf8eab41d217d901716769f05c51a2cb25aae12abc84e871da\",\"dweb:/ipfs/QmQYL5QrJmXCdi5UN9K7imt1iPm9ydZQm6ifShpt451afd\"]},\"src/extensions/bridge-operator-governance/BridgeManager.sol\":{\"keccak256\":\"0xed4094d87c13f38dc4b76b52b8b238447d99cdc2ad452f322ddc891b1217d572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8a37c078764f764094af3e4aba17aeb529e4985a316f7a9902001bb3b0c5872\",\"dweb:/ipfs/QmdSgZNaxS2RfQQ49AZWwo2ZmAt1ViQGShd1zFUTzum7sp\"]},\"src/extensions/bridge-operator-governance/BridgeManagerCallbackRegister.sol\":{\"keccak256\":\"0x0fd58e2e9955d95cfde1ccd8b120fbb3d5bbf7b41143c09217833bd1d01590ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a470ffde7a16e1d32cf2ef09fac248bdd012eabd166d3a42e35891d23aa4027d\",\"dweb:/ipfs/QmWjL7fG82GCvg8UFJVb5PMskwqRDKfggk1WwVKQ1heG8e\"]},\"src/extensions/collections/HasContracts.sol\":{\"keccak256\":\"0x9e1dceb68827adfb8c8184662f29ab5fe14e292a632878150e3b0b6c61bc1dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8903232a7a609b250a1ff2e9522a2366979652145af74637f9c0089916e3da3\",\"dweb:/ipfs/QmVoxZamJEhjYhr9RKVSAKGzakgqmFLfZXhZcDGor7DZe5\"]},\"src/extensions/collections/HasProxyAdmin.sol\":{\"keccak256\":\"0x0916021d04ea0c93c54978dc2fd46575fd2bd867369fbf9ce49f316939ddaf25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e220c59eb50b4e206d0a126f8cd2f7f2aa6865f56a0b4b091149e6928bf97b8\",\"dweb:/ipfs/QmRBk5hhn1w2MghZ8pRfaU1CvgRAZN7nZvxySSPDvkVuGp\"]},\"src/extensions/sequential-governance/CoreGovernance.sol\":{\"keccak256\":\"0xc6056209e8f6a0d9edced67388a4037c6fafffb68a3c7b2fe5759c487bb1d81c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97bcdb2a935279c899a9cc27e4b3f372b255b6851723be8c80b2e9f3865647e9\",\"dweb:/ipfs/QmQdFFXdC2vmwbPyAetmZYNvVbshXGwaWq4waiQRhsmpsT\"]},\"src/extensions/sequential-governance/GlobalCoreGovernance.sol\":{\"keccak256\":\"0x986444cade6313dd1ce4137f3338e4fc296769f5cf669f057cd2838e5ae0e54f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b742e41b4155f872f00e387f971139713f8d5bc8a4d351b026041b8766af6dc\",\"dweb:/ipfs/QmSz3QV64W8MKvuWmdy6rCQXMBX3bz8vcfV8UKYHsQbuvf\"]},\"src/extensions/sequential-governance/governance-relay/CommonGovernanceRelay.sol\":{\"keccak256\":\"0x80c58038f403fd189647669c2f5f913c9c5dd16be3d1b60b296903ce70c9634b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fd2c38ba6888b6c6f32365c3d3501e038f727176fcc3329fefdd909996ab247\",\"dweb:/ipfs/QmYZ31EScGv4Moonfahgi8o6TXVLSWUiAKJLZZtrQobUhZ\"]},\"src/extensions/sequential-governance/governance-relay/GlobalGovernanceRelay.sol\":{\"keccak256\":\"0xe2c192ec663e10953b2754fa154fef64e26b8c470d25272883a9c149623746c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41908a736c62c8145e0d5dd74d8495a06e0132e8d9b60618c97df40da7ae39c7\",\"dweb:/ipfs/QmY4qMLFfngaBTCXoE6fcGSYBrs3q8bKVTgEpkFfL43F8Y\"]},\"src/extensions/sequential-governance/governance-relay/GovernanceRelay.sol\":{\"keccak256\":\"0xb21d764010845c562d1554168cf103b332755764107f6510eeddc1f03c82bc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbd0a15ebd973a1ad8122f78b6b5dc14f980e803773b6541220ce43a3cf8b4f8\",\"dweb:/ipfs/QmXNyjv68auW56WDchsyPMMekFr3nLsDvWWRXCTKxSoFkb\"]},\"src/interfaces/IQuorum.sol\":{\"keccak256\":\"0x6b7920b04a73a0e1ff7404aa1a3b5fc738fc0b6154839480f666fd69b55123f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8c81134e4632e1240aead39fd5393b376a4be53668caf2a390f511f3c6d422d\",\"dweb:/ipfs/QmWPaQPP1WkpdPjLhK7wFXsih8HWs6kRQqjX5zGLu6McGH\"]},\"src/interfaces/bridge/IBridgeManager.sol\":{\"keccak256\":\"0x9339ce2f14bc1e4d0e368a351506ff5735bcbc0a2e41aa633149198bbed76a60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c234bc4f4faa82434fcfeab5b50af61b7027a75f3f773b70b542860d10607574\",\"dweb:/ipfs/QmYPcxU5UMEEoxQphF8KA6P7jCRuGAXRjvoiu3McYfuxER\"]},\"src/interfaces/bridge/IBridgeManagerCallback.sol\":{\"keccak256\":\"0xfd6868a1041577a463b6c96713edcb18063dc817154d09710abfd5783e4629ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acaccf9b0280ec924dfdd641d122da9c0d6944c6bcf55019682ab5f7a925ab32\",\"dweb:/ipfs/QmR4ta1PNirxkJEiSqJVfEo9CRxQjvdfKZMGzf84nekZos\"]},\"src/interfaces/bridge/IBridgeManagerCallbackRegister.sol\":{\"keccak256\":\"0xadbcf65ee9d55f4aa037216d71a279fe41855fe572a4a8734e6f69954aea98f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db7b04d27323d7c0de57def768f65c448022c500f475985b555a53ae5b0c8249\",\"dweb:/ipfs/QmNq4UJripZ7rWJqrccBU7Yq3raJvuNTqqMQkn73DrQSYp\"]},\"src/interfaces/bridge/events/IBridgeManagerEvents.sol\":{\"keccak256\":\"0x217fff41c4a9ca72d142c5a2120bb1b5e67bf5bf5aa0f6128450116aebc07b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c34d339fa8e240c62ea8da11b4fe8745fbe5b6091dbcd40505160ae952f33e16\",\"dweb:/ipfs/QmR6CBz9VAvCSTR7uS3R4yocptsHPz3aodqdDEwSc2xZaE\"]},\"src/interfaces/collections/IHasContracts.sol\":{\"keccak256\":\"0x99d8213d857e30d367155abd15dc42730afdfbbac3a22dfb3b95ffea2083a92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03390ff29b496e244faf4eab55565712f0aea5fecdcb915e3c5866ef29d5686d\",\"dweb:/ipfs/QmdGpXn3VSxfNvjFBxfho7rc41JTq5m6bonrfmpzShhRVs\"]},\"src/interfaces/consumers/ChainTypeConsumer.sol\":{\"keccak256\":\"0xe0d20e00c8d237f8e0fb881abf1ff1ef114173bcb428f06f689c581666a22db7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://178ba522d7a09f458f3d6f9b9f3acf2c588304c72b1b0ede593990903a750967\",\"dweb:/ipfs/QmTXgtbHY3s8NH1VZZNnojgRJ8YEa1kVYTQUxVPb9dqNBD\"]},\"src/interfaces/consumers/SignatureConsumer.sol\":{\"keccak256\":\"0xd370e350722067097dec1a5c31bda6e47e83417fa5c3288293bb910028cd136b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba168a64188bbbecbac288295bd9d5ce6dc215f876b144271428a6f91cba792a\",\"dweb:/ipfs/QmX3bM7QUo2xHxsXetU9RtXG11sKktvrdGovSJfxPEy5QN\"]},\"src/interfaces/consumers/VoteStatusConsumer.sol\":{\"keccak256\":\"0xa5045232c0c053fcf31fb3fe71942344444159c48d5f1b2063dbb06b6a1c9752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f183bc758fb7940f123cb2ea15053d1da707cbeb2e3938542673aab624411e5\",\"dweb:/ipfs/QmfCDeKmeMnTX75odzbKTvY7GekebXwNEbXr7beSNYYKrT\"]},\"src/libraries/AddressArrayUtils.sol\":{\"keccak256\":\"0xaf760162653a85d6e1b24df4d33c74076f778470112f421a02050fb981242001\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3a413f290b8e81540bc6feb739bcfbacf56419b2e657bbce5be43826569b4406\",\"dweb:/ipfs/QmWRjGLBXs7WK92oPm51QpjxMYGuMTBx85Pv7QcGbUZE72\"]},\"src/libraries/Ballot.sol\":{\"keccak256\":\"0xaa1e66bcd86baa6f18c7c5e9b67496535f229cbd2e2ecb4c66bcbfed2b1365de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63338c46e5de170c10778edc9027c803a9e1a351dc90b675aad399136352c31a\",\"dweb:/ipfs/QmbnADhMhgWtVTpcTiBHYwxxym3NqQi6sEcvDyfbopNwyb\"]},\"src/libraries/GlobalProposal.sol\":{\"keccak256\":\"0x2716e1baf467abab71d89efa01ce0dc9164531ab4221d2758233a81b6d906474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8178e89a15d5afd8abee8cc8d33321dad28f3a28d1684c15e861b8a6294d9ca1\",\"dweb:/ipfs/QmfHoZtWeU4mVw4k7wKVPsKp3Gx5YAUx6yj3oNHRpZEeDt\"]},\"src/libraries/Proposal.sol\":{\"keccak256\":\"0xbc29aa4e69db7eef0034fdb795181124f86bcf2bc07b5e4a202100dbdce7f7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18f09131ea8d57d43a8fdb470c74ccaec1204c7120f15229b616c1e3acba1770\",\"dweb:/ipfs/Qmc3qJgPhoJeKVUEtHwjofnX3r3ndceDsxm82r1hcgzfyd\"]},\"src/mainchain/MainchainBridgeManager.sol\":{\"keccak256\":\"0xb365eb9fefd1c284a86aa97f0bd0d7eb5406d09c87832d1048b2c18d6c08d48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a10046c0d4ed56a61f9e4139c7de2b697f67eb51155945508e33a4255dcee33\",\"dweb:/ipfs/Qmen2Wwj8pM6XYdKGAAiJKQ8JZ5JiWRnbHdUmnSBoXSBJY\"]},\"src/types/Types.sol\":{\"keccak256\":\"0x20ab58f1c9ae4936f9dd9891d064301d78ef508c1dd2ce0c19a7b5b81d530e36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edd3ba3207e3891e18a7287453e2f260c13eb0f0f1998aad8f37479041e9872a\",\"dweb:/ipfs/QmS2AHHdKzp9Z2Y1tgA4v9DFBDF9i4M8oyBVGryYA9ftJQ\"]},\"src/types/operations/LibTUint256Slot.sol\":{\"keccak256\":\"0xe10c089459baf373494d76b00e582d49f6e43c500ab0f1657d53afc2fa472cbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fc230e404242474f7433259c92641b34a387b5cfed7690ec495fa87271734c6\",\"dweb:/ipfs/Qme3tC8svJqFBeWHdXgsvbp1DtPycighFXVT4yUBmEcjJg\"]},\"src/utils/CommonErrors.sol\":{\"keccak256\":\"0x22942c8fea2d1ca863ac1f9c1662d714b8ac0856684e36f8aaf19508648c1053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e47ff198edb68a65d65938c67f860c041a4b7f64cff5b101a333869096044b\",\"dweb:/ipfs/QmTFwEY7jPiUSKc3GvYDY7qHqXJzUYCmSjoVrcgFhi8gZz\"]},\"src/utils/ContractType.sol\":{\"keccak256\":\"0x7f547a44265f4c4b03d8971f7fc5eaa2e6064ea8cd509c1b761108f9800dab68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130e3f8353d9f34098fbf2867c3bf812a5184904d0113d55c5c820eb64f2547b\",\"dweb:/ipfs/QmeFSUbPi8fyG1W7kKegFRtCqALjQBXQyVvQ4sjpi6SWH3\"]},\"src/utils/IdentityGuard.sol\":{\"keccak256\":\"0x2d0dfcef3636945bc1785c1fa5a05f5203c79cbb81b2eee92a3ac6a2378c2ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e4cedc10e50bfaacdc732eab78768b5e0abbc8336eeaffa15de2a7be90de504\",\"dweb:/ipfs/QmR17AgM71NkH5ZeLpmaRMzPyXAKyhafoK2TZUnLw2z3Mv\"]},\"src/utils/RoleAccess.sol\":{\"keccak256\":\"0x7da4631824b53be17e246102ad59458f91f2395710561ac9bface18d35fb2502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070d8254ea4d6fde54ae02e121bb84bdb63a3c5a8513d2d364ad5038f6a95493\",\"dweb:/ipfs/QmfXpp3t8XcGFXewoVRmoQMKJb9vPo95Kj4vsGfNBf7gSH\"]}},\"version\":1}",
  "nonce": 4,
  "numDeployments": 1,
  "storageLayout": {
    "storage": [
      {
        "astId": 135934,
        "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
        "label": "round",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 135942,
        "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
        "label": "vote",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ProposalVote)135872_storage))"
      },
      {
        "astId": 135944,
        "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
        "label": "_proposalExpiryDuration",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 136681,
        "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
        "label": "_targetOptionsMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_enum(TargetOption)140705,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(TargetOption)140705": {
        "encoding": "inplace",
        "label": "enum GlobalProposal.TargetOption",
        "numberOfBytes": "1"
      },
      "t_enum(VoteStatus)139658": {
        "encoding": "inplace",
        "label": "enum VoteStatusConsumer.VoteStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Signature)139649_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SignatureConsumer.Signature)",
        "numberOfBytes": "32",
        "value": "t_struct(Signature)139649_storage"
      },
      "t_mapping(t_enum(TargetOption)140705,t_address)": {
        "encoding": "mapping",
        "key": "t_enum(TargetOption)140705",
        "label": "mapping(enum GlobalProposal.TargetOption => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ProposalVote)135872_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct CoreGovernance.ProposalVote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(ProposalVote)135872_storage)"
      },
      "t_mapping(t_uint256,t_struct(ProposalVote)135872_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CoreGovernance.ProposalVote)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalVote)135872_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(ProposalVote)135872_storage": {
        "encoding": "inplace",
        "label": "struct CoreGovernance.ProposalVote",
        "numberOfBytes": "288",
        "members": [
          {
            "astId": 135848,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(VoteStatus)139658"
          },
          {
            "astId": 135850,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "hash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 135852,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "againstVoteWeight",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 135854,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "forVoteWeight",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 135857,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "forVoteds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 135860,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "againstVoteds",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 135862,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "expiryTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 135867,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "sig",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(Signature)139649_storage)"
          },
          {
            "astId": 135871,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "voted",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)"
          }
        ]
      },
      "t_struct(Signature)139649_storage": {
        "encoding": "inplace",
        "label": "struct SignatureConsumer.Signature",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 139644,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "v",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 139646,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "r",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 139648,
            "contract": "src/mainchain/MainchainBridgeManager.sol:MainchainBridgeManager",
            "label": "s",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1712300364,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "round(uint256)": {
        "notice": "chain id = 0 for global proposal"
      },
      "updateBridgeOperator(address)": {
        "notice": "This method checks authorization by querying the corresponding operator of the msg.sender and then attempts to remove it from the `_bridgeOperatorSet` for gas optimization. In case we allow a governor can leave their operator address blank null `address(0)`, consider add authorization check."
      }
    }
  }
}